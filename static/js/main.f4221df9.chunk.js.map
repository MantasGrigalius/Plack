{"version":3,"sources":["Store/Reducers/user.js","Store/Reducers/channel.js","Store/Reducers/index.js","firebase.js","Pages/Register/Register.js","Pages/Login/Login.js","Components/ColorPanel/ColorPanel.js","Components/SidePanel/UserPanel.js","Store/Actions/resetApp.js","Components/SidePanel/Channels.js","Store/Actions/setChannel.js","Components/SidePanel/SidePanel.js","Components/Messages/MessagesHeader.js","Components/Messages/FileModal.js","Components/Messages/ProgressBar.js","Components/Messages/MessageForm.js","Components/Messages/SingleMessage.js","Components/Messages/Messages.js","Components/MetaPanel/MetaPanel.js","Pages/MainPage/MainPage.js","Components/Spinner/Spiner.js","App.js","Store/Actions/setUser.js","index.js"],"names":["initialState","user","isLoading","channel","appReducer","combineReducers","state","action","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Register","useState","username","email","password","passwordConfirm","errors","loading","usersRef","database","ref","form","setForm","handleChange","e","target","name","value","formIsNotEmpty","length","passwordsMatch","saveUser","createdUser","child","uid","set","displayName","avatar","photoURL","errorMessage","Message","color","Grid","className","textAlign","verticalAlign","Column","style","maxWidth","Header","as","Icon","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","Button","disabled","onClick","preventDefault","auth","createUserWithEmailAndPassword","then","updateProfile","md5","catch","err","console","log","message","to","Login","isFormValid","prev","signInWithEmailAndPassword","signedUser","ColorPanel","Sidebar","Menu","inverted","vertical","visible","width","Divider","UserPanel","userData","dispatch","useDispatch","dropdownOptions","key","text","signOut","GridColumn","GridRow","padding","margin","floated","HeaderContent","Dropdown","trigger","Image","src","spaced","options","Channels","modal","channelName","channelDetails","channels","channelsRef","activeChannel","data","setData","useEffect","loadedChannels","on","snap","push","val","addListeners","off","closeModal","handleSubmit","addChannel","newChannel","id","details","createdBy","update","Fragment","paddingBottom","Item","map","setChannel","changeChannel","active","Modal","basic","open","onClose","Content","onSubmit","Field","label","Actions","SidePanel","backgroundColor","fixed","MessagesHeader","clearing","Subheader","FileModal","uploadFile","file","authorized","resetFileState","isAuthorized","fileName","includes","mime","lookup","files","metadata","contentType","ProgressBar","uploadState","percents","Progress","percent","progress","indicating","MessageForm","setState","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","props","filePath","uuidv4","pathToUpload","messageRef","uploadTask","storageRef","put","percentUploaded","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadUrl","sendFileMessage","error","sendMessage","openModal","storage","this","labelPosition","Group","widths","marginTop","content","React","Component","isOnMessage","SingleMessage","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","image","Text","Messages","messages","messageLoading","addMessageListener","useCallback","channelId","loadedMessages","displayMessages","MetaPanel","MainPage","useSelector","columns","marginLeft","Spinner","Dimmer","Loader","App","onAuthStateChanged","setUser","history","exact","path","component","withRouter","connect","store","createStore","undefined","applyMiddleware","Thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4221df9.chunk.js","sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true\n};\n\nexport const user = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  channel: null\n};\n\nexport const channel = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_CHANNEL\":\n      return {\n        ...state,\n        channel: action.channel\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { user } from \"./user\";\nimport { channel } from \"./channel\";\n\nconst appReducer = combineReducers({\n  user,\n  channel\n});\n\nexport const allReducer = (state, action) => {\n  if (action.type === \"RESET_APP\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBa643TjTtPD0rnjdOfuFLpYyzDdsqr0Iw\",\n  authDomain: \"plack-23141.firebaseapp.com\",\n  databaseURL: \"https://plack-23141.firebaseio.com\",\n  projectId: \"plack-23141\",\n  storageBucket: \"plack-23141.appspot.com\",\n  messagingSenderId: \"360318459062\",\n  appId: \"1:360318459062:web:a7d366336084667dacda17\",\n  measurementId: \"G-E16F9YZVBR\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Register = () => {\n  const [form, setForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    errors: \"\",\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isFormValid = () => {\n    if (!formIsNotEmpty(form)) {\n      setForm({ ...form, errors: \"Fill all fields\" });\n      return false;\n    } else if (!passwordsMatch(form)) {\n      setForm({\n        ...form,\n        errors: \"Passwords do not match or password to short\"\n      });\n      return false;\n    } else return true;\n  };\n\n  const formIsNotEmpty = ({ username, password, email }) => {\n    return username.length && password.length && email.length > 0;\n  };\n\n  const passwordsMatch = ({ password, passwordConfirm }) => {\n    return password === passwordConfirm && password.length >= 6;\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid()) {\n      e.preventDefault();\n      setForm({ ...form, loading: true, errors: \"\" });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(form.email, form.password)\n        .then(createdUser => {\n          createdUser.user\n            .updateProfile({\n              displayName: form.username,\n              photoURL: `https://www.gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              saveUser(createdUser);\n            })\n            .catch(err => {\n              console.log(err);\n              setForm({ ...form, loading: false, errors: err.message });\n            });\n        })\n        .catch(err => {\n          setForm({ ...form, loading: false, errors: err.message });\n          console.log(err);\n        });\n    }\n  };\n\n  const saveUser = createdUser => {\n    return form.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Register for Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"username\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              onChange={handleChange}\n              type=\"text\"\n            />\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Form.Input\n              fluid\n              name=\"passwordConfirm\"\n              icon=\"repeat\"\n              iconPosition=\"left\"\n              placeholder=\"Repeat password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Submit\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Already a user? <Link to=\"/login\">Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Login = () => {\n  const [form, setForm] = useState({\n    email: null,\n    password: null,\n    errors: \"\",\n    loading: false\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid(form)) {\n      e.preventDefault();\n      setForm(prev => ({ ...prev, loading: true, errors: \"\" }));\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(form.email, form.password)\n        .then(signedUser => {\n          setForm(prev => ({ ...prev, loading: false }));\n        })\n        .catch(err => {\n          console.log(err);\n          setForm(prev => ({ ...prev, loading: false, errors: err.message }));\n        });\n    }\n  };\n\n  const isFormValid = ({ email, password }) =>\n    email && password\n      ? true\n      : setForm(prev => ({ ...prev, errors: \"Fill all fields\" }));\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Login to Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Not a user? <Link to=\"/register\">Register</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Sidebar, Menu, Divider, Button } from \"semantic-ui-react\";\n\nconst ColorPanel = () => {\n  return (\n    <Sidebar\n      as={Menu}\n      icon=\"labeled\"\n      inverted\n      //   animation=\"overlay\"\n      vertical\n      visible\n      width=\"very thin\"\n    >\n      <Divider />\n      <Button icon=\"add\" size=\"small\" color=\"blue\" />\n    </Sidebar>\n  );\n};\n\nexport default ColorPanel;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetApp } from \"../../Store/Actions/resetApp\";\nimport {\n  Grid,\n  GridColumn,\n  GridRow,\n  Header,\n  HeaderContent,\n  Icon,\n  Dropdown,\n  Image\n} from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nconst UserPanel = ({ userData }) => {\n  const dispatch = useDispatch();\n  const handleSignout = () => {\n    firebase.auth().signOut();\n    dispatch(resetApp());\n  };\n  const dropdownOptions = [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{userData.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={handleSignout}>Sign Out</span>\n    }\n  ];\n\n  return (\n    <Grid>\n      <GridColumn>\n        <GridRow style={{ padding: \"1.2em\", margin: 0 }}>\n          <Header inverted floated=\"left\" as=\"h2\">\n            <Icon name=\"code\" />\n            <HeaderContent>Plack</HeaderContent>\n          </Header>\n          <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n            <Dropdown\n              trigger={\n                <span>\n                  <Image src={userData.photoURL} spaced=\"right\" avatar />\n                  {userData.displayName}\n                </span>\n              }\n              options={dropdownOptions}\n            />\n          </Header>\n        </GridRow>\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default UserPanel;\n","export const resetApp = () => ({\n  type: \"RESET_APP\"\n});\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\nimport { setChannel } from \"../../Store/Actions/setChannel\";\nimport firebase from \"../../firebase\";\n\nconst Channels = ({ userData }) => {\n  const [data, setData] = useState({\n    modal: false,\n    channelName: \"\",\n    channelDetails: \"\",\n    channels: [],\n    channelsRef: firebase.database().ref(\"channels\"),\n    // firstLoad: true,\n    activeChannel: null\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const addListeners = () => {\n      let loadedChannels = [];\n      data.channelsRef.on(\"child_added\", snap => {\n        loadedChannels.push(snap.val());\n        setData(prev => ({ ...prev, channels: loadedChannels }));\n      });\n    };\n    addListeners();\n    return () => data.channelsRef.off();\n  }, [data.channelsRef]);\n\n  const closeModal = () => setData(prev => ({ ...prev, modal: false }));\n\n  const openModal = () => setData(prev => ({ ...prev, modal: true }));\n\n  const handleChange = e => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isFormValid(data)) {\n      addChannel();\n    }\n  };\n\n  const addChannel = () => {\n    const key = data.channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: data.channelName,\n      details: data.channelDetails,\n      createdBy: {\n        name: userData.displayName,\n        avatar: userData.photoURL\n      }\n    };\n    data.channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        setData(prev => ({ ...prev, channelName: \"\", channelDetails: \"\" }));\n        closeModal();\n        console.log(\"added channel\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  const isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  const changeChannel = channel => {\n    dispatch(setChannel(channel));\n    setData(prev => ({ ...prev, activeChannel: channel.id }));\n  };\n\n  const displayChannels = channels => {\n    return channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => changeChannel(channel)}\n        name={channel.name}\n        active={data.activeChannel === channel.id}\n      >\n        #{channel.name}\n      </Menu.Item>\n    ));\n  };\n  return (\n    <React.Fragment>\n      <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n        <Menu.Item>\n          <span>\n            <Icon name=\"exchange\" /> CHANNELS\n          </span>\n          ({data.channels.length}) <Icon name=\"add\" onClick={openModal} />\n        </Menu.Item>\n        {displayChannels(data.channels)}\n      </Menu.Menu>\n\n      <Modal basic open={data.modal} onClose={closeModal}>\n        <Modal.Header>Add a Channel</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={handleSubmit}>\n            <Form.Field>\n              <Input\n                fluid\n                label=\"Name of channel\"\n                name=\"channelName\"\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                fluid\n                label=\"About the Channel\"\n                name=\"channelDetails\"\n                onChange={handleChange}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" inverted onClick={handleSubmit}>\n            <Icon name=\"checkmark\" /> Add\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default Channels;\n","export const setChannel = channel =>({\n    type: 'SET_CHANNEL',\n    channel\n})","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\n\nconst SidePanel = ({ userData }) => {\n  return (\n    <Menu\n      style={{ backgroundColor: \"#40123e\" }}\n      fixed=\"left\"\n      vertical\n      inverted\n      size=\"large\"\n    >\n      <UserPanel userData={userData} />\n      <Channels userData={userData} />\n    </Menu>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nconst MessagesHeader = () => {\n  return (\n    <Segment clearing>\n      <Header fluid=\"true\" as=\"h2\" floated=\"left\">\n        <span>\n          Channel\n          <Icon name=\"star outline\" color=\"black\" />\n        </span>\n        <Header.Subheader>2 Users</Header.Subheader>\n      </Header>\n      {/* channel title */}\n      <Header floated=\"right\">\n        <Input\n          size=\"mini\"\n          type=\"text\"\n          icon=\"search\"\n          name=\"searchTerm\"\n          placeholder=\"Search Messages\"\n        />\n      </Header>\n    </Segment>\n  );\n};\n\nexport default MessagesHeader;\n","import React, { useState } from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\n\nconst FileModal = ({ modal, closeModal, uploadFile }) => {\n  const [data, setData] = useState({\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  });\n\n  const addFile = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setData({ ...data, file: file });\n    }\n  };\n\n  const sendFile = () => {\n    if (data.file !== null) {\n      if (isAuthorized(data.file.name)) {\n        const metadata = { contentType: mime.lookup(data.file.name) };\n        uploadFile(data.file, metadata);\n        resetFileState();\n        closeModal();\n      }\n    }\n  };\n\n  const resetFileState = () => {\n    setData({ ...data, file: null });\n  };\n\n  const closeModalHere = () => {\n    closeModal();\n    resetFileState();\n  };\n\n  const isAuthorized = fileName =>\n    data.authorized.includes(mime.lookup(fileName));\n\n  return (\n    <Modal basic open={modal} onClose={closeModal}>\n      <Modal.Header>Select an image file</Modal.Header>\n      <Modal.Content>\n        <Input\n          onChange={addFile}\n          fluid\n          label=\"File types: JPEG, PNG\"\n          name=\"file\"\n          type=\"file\"\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"green\" onClick={sendFile} inverted>\n          <Icon name=\"checkmark\" /> Send\n        </Button>\n        <Button color=\"red\" inverted onClick={closeModalHere}>\n          <Icon name=\"remove\" /> Cancel\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percents }) =>\n  uploadState === 'uploading' && (\n    <Progress\n      className=\"progress_bar\"\n      percent={percents}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport FileModal from \"./FileModal\";\nimport firebase from \"../../firebase\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      message: \"\",\n      loading: false,\n      error: \"\",\n      modal: false,\n      uploadTask: null,\n      uploadState: \"\",\n      percentUploaded: 0,\n      storageRef: firebase.storage().ref()\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.props.user.uid,\n        name: this.props.user.displayName,\n        avatar: this.props.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  uploadFile = (file, metadata) => {\n    const filePath = `chat/public/${uuidv4()}.jpg`;\n    const pathToUpload = this.props.channel.id;\n    const ref = this.props.messageRef;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.log(err);\n            this.setState({ uploadState: \"error\", uploadTask: null });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({ uploadState: \"error\", uploadTask: null });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ error: err.message });\n      });\n  };\n\n  sendMessage = () => {\n    const { messageRef, channel } = this.props;\n    if (this.state.message.length > 0) {\n      this.setState({ loading: true, error: \"\" });\n      messageRef\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\" });\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            message: \"\",\n            error: err.message\n          });\n        });\n    } else this.setState({ error: \"No data filled\" });\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n  render() {\n    return (\n      <Segment className=\"messageForm\">\n        <Input\n          value={this.state.message}\n          fluid\n          name=\"message\"\n          label={<Button icon=\"add\" />}\n          labelPosition=\"left\"\n          className={this.state.error.length > 0 ? \"error\" : null}\n          placeholder=\"Write your message\"\n          onChange={this.handleChange}\n        />\n        <Button.Group icon widths=\"2\" style={{ marginTop: \"10px\" }}>\n          <Button\n            color=\"green\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            onClick={this.sendMessage}\n            disabled={this.state.loading}\n            className={this.state.loading ? \"loading\" : null}\n          />\n          <Button\n            color=\"red\"\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n            onClick={this.openModal}\n          />\n        </Button.Group>\n        <FileModal\n          modal={this.state.modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={this.state.uploadState}\n          percents={this.state.percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message_self\" : null;\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => {\n  return moment(timestamp).fromNow();\n};\n\nconst SingleMessage = ({ message, user }) => {\n  return (\n    <Comment>\n      <Comment.Avatar src={message.user.avatar} />\n      <Comment.Content className={isOnMessage(message, user)}>\n        <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n\n        {isImage(message) ? (\n          <Image src={message.image} className=\"message_image\" />\n        ) : (\n          <Comment.Text>{message.content}</Comment.Text>\n        )}\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default SingleMessage;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport SingleMessage from \"./SingleMessage\";\n\nconst Messages = ({ channel, user }) => {\n  const [data, setData] = useState({\n    messages: [],\n    messageLoading: true,\n    messageRef: firebase.database().ref(\"messages\")\n  });\n\n  const addMessageListener = useCallback(\n    channelId => {\n      setData(prev => ({\n        ...prev,\n        messages: []\n      }));\n      let loadedMessages = [];\n      data.messageRef.child(channelId).on(\"child_added\", snap => {\n        loadedMessages.push(snap.val());\n        setData(prev => ({\n          ...prev,\n          messages: loadedMessages,\n          messageLoading: false\n        }));\n      });\n    },\n    [data.messageRef]\n  );\n\n  const addListeners = useCallback(\n    channelId => {\n      addMessageListener(channelId);\n    },\n    [addMessageListener]\n  );\n\n  useEffect(() => {\n    if (channel && user) {\n      addListeners(channel.id);\n    }\n    return () => {\n      data.messageRef.off();\n    };\n  }, [channel, user, addListeners]);\n\n  const displayMessages = messages => {\n    if (messages.length > 0) {\n      return messages.map(message => (\n        <SingleMessage key={message.timestamp} message={message} user={user} />\n      ));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <MessagesHeader />\n      <Segment className=\"messages\">\n        <Comment.Group>{displayMessages(data.messages)}</Comment.Group>\n      </Segment>\n      <MessageForm messageRef={data.messageRef} channel={channel} user={user} />\n    </React.Fragment>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\n\nconst MetaPanel = () => {\n  return <div>MetaPanel</div>;\n};\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport ColorPanel from \"../../Components/ColorPanel/ColorPanel\";\nimport SidePanel from \"../../Components/SidePanel/SidePanel\";\nimport Messages from \"../../Components/Messages/Messages\";\nimport MetaPanel from \"../../Components/MetaPanel/MetaPanel\";\nimport { useSelector } from \"react-redux\";\n\nimport \"../../App.css\";\n\nconst MainPage = () => {\n  const data = useSelector(state =>\n    state.user.user !== null\n      ? { user: state.user.user, channel: state.channel.channel }\n      : { user: \"\" }\n  );\n  return (\n    <Grid columns=\"equal\" className=\"u-heigth100vh\">\n      {/* <GridColumn> */}\n      <ColorPanel />\n      {/* </GridColumn> */}\n      {/* <GridColumn> */}\n      <SidePanel userData={data.user} />\n      {/* </GridColumn> */}\n      <GridColumn style={{ marginLeft: \"320px\" }}>\n        <Messages channel={data.channel} user={data.user} />\n      </GridColumn>\n      <GridColumn width={4}>\n        <MetaPanel />\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content=\"Loading\" />\n    </Dimmer>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport firebase from \"./firebase\";\nimport Register from \"./Pages/Register/Register\";\nimport Login from \"./Pages/Login/Login\";\nimport MainPage from \"./Pages/MainPage/MainPage\";\nimport Spinner from \"./Components/Spinner/Spiner\";\nimport { setUser } from \"./Store/Actions/setUser\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    //firebase is mounted, and this function is always active\n    firebase.auth().onAuthStateChanged(user => {\n      if (user !== null) {\n        this.props.setUser(user);\n        this.props.history.push(\"/plackApp\");\n      } else {\n        this.props.setUser(null);\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/plackApp\" component={MainPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nexport default withRouter(connect(mapStateToProps, { setUser })(App));\n","export const setUser = user => ({\n  type: \"SET_USER\",\n  user\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { allReducer } from \"./Store/Reducers/index\";\nimport Thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst store = createStore(allReducer, applyMiddleware(Thunk, logger));\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}