{"version":3,"sources":["Store/Reducers/user.js","Store/Reducers/channel.js","Store/Reducers/index.js","firebase.js","Pages/Register/Register.js","Pages/Login/Login.js","Components/ColorPanel/ColorPanel.js","Helpers/handleOnlineStatus.js","Components/SidePanel/UserPanel.js","Store/Actions/resetApp.js","Store/Actions/setChannel.js","Components/SidePanel/Channels.js","Components/SidePanel/DirectMessages.js","Components/SidePanel/SidePanel.js","Components/Messages/MessagesHeader.js","Components/Messages/FileModal.js","Components/Messages/ProgressBar.js","Components/Messages/MessageForm.js","Components/Messages/SingleMessage.js","Components/Messages/Messages.js","Components/MetaPanel/MetaPanel.js","Pages/MainPage/MainPage.js","Components/Spinner/Spiner.js","App.js","Store/Actions/setUser.js","index.js"],"names":["initialState","user","isLoading","channel","isPrivate","appReducer","combineReducers","state","action","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Register","useState","username","email","password","passwordConfirm","errors","loading","usersRef","database","ref","form","setForm","handleChange","e","target","name","value","formIsNotEmpty","length","passwordsMatch","saveUser","createdUser","child","uid","set","displayName","avatar","photoURL","errorMessage","Message","color","Grid","className","textAlign","verticalAlign","Column","style","maxWidth","Header","as","Icon","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","Button","disabled","onClick","preventDefault","auth","createUserWithEmailAndPassword","then","updateProfile","md5","catch","err","console","log","message","to","Login","isFormValid","prev","signInWithEmailAndPassword","signedUser","ColorPanel","Sidebar","Menu","inverted","vertical","visible","width","Divider","handleOnlineStatus","userId","remove","UserPanel","userData","dispatch","useDispatch","dropdownOptions","key","text","signOut","GridColumn","GridRow","padding","margin","floated","HeaderContent","Dropdown","trigger","Image","src","spaced","options","setChannel","Channels","modal","channelName","channelDetails","channels","channelsRef","firstLoad","activeChannel","addListeners","loadedChannels","on","snap","push","val","setState","setFirstChannel","props","id","closeModal","openModal","handleSubmit","addChannel","newChannel","details","createdBy","update","changeChannel","displayChannels","map","Item","active","this","off","Fragment","paddingBottom","Modal","basic","open","onClose","Content","Field","onSubmit","label","Actions","React","Component","connect","DirectMessages","userRef","users","presenceRef","removeListeners","addEventListeners","setUsers","loadedUsers","addStatusToUser","connected","updateUsers","reduce","acc","concat","channelId","setChannelId","createChannel","friendId","displayUsers","status","SidePanel","backgroundColor","fixed","MessagesHeader","userAmount","clearing","Subheader","FileModal","uploadFile","file","authorized","data","setData","resetFileState","isAuthorized","fileName","includes","mime","lookup","files","metadata","contentType","ProgressBar","uploadState","percents","Progress","percent","progress","indicating","MessageForm","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","filePath","uuidv4","pathToUpload","messageRef","uploadTask","storageRef","put","percentUploaded","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadUrl","sendFileMessage","error","sendMessage","storage","labelPosition","onKeyDown","keyCode","Group","widths","marginTop","content","isOnMessage","SingleMessage","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","image","Text","Messages","messages","messageLoading","privateMessageRef","listeners","searchTerm","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","forEach","listener","event","addMessageListener","setMessageRef","loadedMessages","findIndex","newListener","addToListeners","displayChannelName","usersAmount","filter","undefined","displayMessages","MetaPanel","MainPage","useSelector","columns","marginLeft","Spinner","Dimmer","Loader","App","onAuthStateChanged","setUser","window","addEventListener","history","exact","path","component","withRouter","store","createStore","applyMiddleware","Thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.238e2d93.chunk.js","sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true\n};\n\nexport const user = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  channel: null,\n  isPrivate: false\n};\n\nexport const channel = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_CHANNEL\":\n      return {\n        ...state,\n        channel: action.channel,\n        isPrivate: action.isPrivate\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { user } from \"./user\";\nimport { channel } from \"./channel\";\n\nconst appReducer = combineReducers({\n  user,\n  channel\n});\n\nexport const allReducer = (state, action) => {\n  if (action.type === \"RESET_APP\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBa643TjTtPD0rnjdOfuFLpYyzDdsqr0Iw\",\n  authDomain: \"plack-23141.firebaseapp.com\",\n  databaseURL: \"https://plack-23141.firebaseio.com\",\n  projectId: \"plack-23141\",\n  storageBucket: \"plack-23141.appspot.com\",\n  messagingSenderId: \"360318459062\",\n  appId: \"1:360318459062:web:a7d366336084667dacda17\",\n  measurementId: \"G-E16F9YZVBR\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Register = () => {\n  const [form, setForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    errors: \"\",\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isFormValid = () => {\n    if (!formIsNotEmpty(form)) {\n      setForm({ ...form, errors: \"Fill all fields\" });\n      return false;\n    } else if (!passwordsMatch(form)) {\n      setForm({\n        ...form,\n        errors: \"Passwords do not match or password to short\"\n      });\n      return false;\n    } else return true;\n  };\n\n  const formIsNotEmpty = ({ username, password, email }) => {\n    return username.length && password.length && email.length > 0;\n  };\n\n  const passwordsMatch = ({ password, passwordConfirm }) => {\n    return password === passwordConfirm && password.length >= 6;\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid()) {\n      e.preventDefault();\n      setForm({ ...form, loading: true, errors: \"\" });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(form.email, form.password)\n        .then(createdUser => {\n          createdUser.user\n            .updateProfile({\n              displayName: form.username,\n              photoURL: `https://www.gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              saveUser(createdUser);\n            })\n            .catch(err => {\n              console.log(err);\n              setForm({ ...form, loading: false, errors: err.message });\n            });\n        })\n        .catch(err => {\n          setForm({ ...form, loading: false, errors: err.message });\n          console.log(err);\n        });\n    }\n  };\n\n  const saveUser = createdUser => {\n    return form.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Register for Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"username\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              onChange={handleChange}\n              type=\"text\"\n            />\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Form.Input\n              fluid\n              name=\"passwordConfirm\"\n              icon=\"repeat\"\n              iconPosition=\"left\"\n              placeholder=\"Repeat password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Submit\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Already a user? <Link to=\"/login\">Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Login = () => {\n  const [form, setForm] = useState({\n    email: null,\n    password: null,\n    errors: \"\",\n    loading: false\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid(form)) {\n      e.preventDefault();\n      setForm(prev => ({ ...prev, loading: true, errors: \"\" }));\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(form.email, form.password)\n        .then(signedUser => {\n          setForm(prev => ({ ...prev, loading: false }));\n        })\n        .catch(err => {\n          console.log(err);\n          setForm(prev => ({ ...prev, loading: false, errors: err.message }));\n        });\n    }\n  };\n\n  const isFormValid = ({ email, password }) =>\n    email && password\n      ? true\n      : setForm(prev => ({ ...prev, errors: \"Fill all fields\" }));\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Login to Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Not a user? <Link to=\"/register\">Register</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Sidebar, Menu, Divider, Button } from \"semantic-ui-react\";\n\nconst ColorPanel = () => {\n  return (\n    <Sidebar\n      as={Menu}\n      icon=\"labeled\"\n      inverted\n      //   animation=\"overlay\"\n      vertical\n      visible\n      width=\"very thin\"\n    >\n      <Divider />\n      <Button icon=\"add\" size=\"small\" color=\"blue\" />\n    </Sidebar>\n  );\n};\n\nexport default ColorPanel;\n","import firebase from \"../firebase\";\n\nexport const handleOnlineStatus = (userId, action = \"remove\") => {\n  const ref = firebase.database().ref(\"presence/\" + userId);\n  if (action === \"add\") {\n    ref.set(true);\n  } else {\n    ref.remove();\n  }\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetApp } from \"../../Store/Actions/resetApp\";\nimport { handleOnlineStatus } from \"../../Helpers/handleOnlineStatus\";\nimport {\n  Grid,\n  GridColumn,\n  GridRow,\n  Header,\n  HeaderContent,\n  Icon,\n  Dropdown,\n  Image\n} from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nconst UserPanel = ({ userData }) => {\n  const dispatch = useDispatch();\n\n  const handleSignout = () => {\n    firebase.auth().signOut();\n    handleOnlineStatus(userData.uid);\n    dispatch(resetApp());\n  };\n\n  const dropdownOptions = [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{userData.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={handleSignout}>Sign Out</span>\n    }\n  ];\n\n  return (\n    <Grid>\n      <GridColumn>\n        <GridRow style={{ padding: \"1.2em\", margin: 0 }}>\n          <Header inverted floated=\"left\" as=\"h2\">\n            <Icon name=\"code\" />\n            <HeaderContent>Plack</HeaderContent>\n          </Header>\n          <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n            <Dropdown\n              trigger={\n                <span>\n                  <Image src={userData.photoURL} spaced=\"right\" avatar />\n                  {userData.displayName}\n                </span>\n              }\n              options={dropdownOptions}\n            />\n          </Header>\n        </GridRow>\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default UserPanel;\n","export const resetApp = () => ({\n  type: \"RESET_APP\"\n});\n","export const setChannel = (channel, isPrivate = false) => ({\n  type: \"SET_CHANNEL\",\n  channel,\n  isPrivate\n});\n","import React from \"react\";\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setChannel } from \"../../Store/Actions/setChannel\";\nimport firebase from \"../../firebase\";\n\nclass Channels extends React.Component {\n  state = {\n    modal: false,\n    channelName: \"\",\n    channelDetails: \"\",\n    channels: [],\n    channelsRef: firebase.database().ref(\"channels\"),\n    firstLoad: true,\n    activeChannel: null\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.state.channelsRef.off();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n    });\n  };\n\n  setFirstChannel = () => {\n    if (this.state.firstLoad) {\n      this.props.setChannel(this.state.channels[0]);\n      this.setState({\n        firstLoad: false,\n        activeChannel: this.state.channels[0].id\n      });\n    }\n  };\n\n  closeModal = () => this.setState({ modal: false });\n\n  openModal = () => this.setState({ modal: true });\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  addChannel = () => {\n    const key = this.state.channelsRef.push().key;\n    const { userData } = this.props;\n    const { channelName, channelDetails } = this.state;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: userData.displayName,\n        avatar: userData.photoURL\n      }\n    };\n    this.state.channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  changeChannel = channel => {\n    this.props.setChannel(channel);\n    this.setState({ activeChannel: channel.id });\n  };\n\n  displayChannels = channels => {\n    return channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        active={this.state.activeChannel === channel.id}\n      >\n        #{channel.name}\n      </Menu.Item>\n    ));\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>\n            ({this.state.channels.length}){\" \"}\n            <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(this.state.channels)}\n        </Menu.Menu>\n\n        <Modal basic open={this.state.modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form.Field onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form.Field>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(null, { setChannel })(Channels);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setChannel } from \"../../Store/Actions/setChannel\";\nimport { Menu, Icon, Image } from \"semantic-ui-react\";\n\nclass DirectMessages extends React.Component {\n  state = {\n    userRef: firebase.database().ref(\"users\"),\n    channelsRef: firebase.database().ref(\"privateMessages\"),\n    users: [],\n    presenceRef: firebase.database().ref(\"presence\"),\n    activeChannel: null\n  };\n\n  componentDidMount() {\n    if (this.props.userData) {\n      this.addEventListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.userRef.off();\n    this.state.presenceRef.off();\n  };\n\n  addEventListeners = () => {\n    this.setUsers(this.props.userData.uid);\n  };\n\n  setUsers = userId => {\n    let loadedUsers = [];\n    this.state.userRef.on(\"child_added\", snap => {\n      if (userId !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({ users: loadedUsers });\n      }\n    });\n\n    this.state.presenceRef.on(\"child_added\", snap => {\n      if (userId !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.presenceRef.on(\"child_removed\", snap => {\n      if (userId !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updateUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updateUsers });\n  };\n\n  setChannel = user => {\n    this.setState({ activeChannel: user.uid });\n    const channelId = this.setChannelId(this.props.userData.uid, user.uid);\n    const channel = {\n      id: channelId,\n      name: user.name\n    };\n    this.createChannel(channelId, channel);\n    this.props.setChannel(channel, true);\n  };\n\n  createChannel = (channelId, channel) => {\n    this.state.channelsRef\n      .child(channelId)\n      .update(channel)\n      .catch(err => console.log(err));\n  };\n\n  setChannelId = (userId, friendId) => {\n    return userId > friendId\n      ? `${userId}/${friendId}`\n      : `${friendId}/${userId}`;\n  };\n\n  displayUsers = users => {\n    return users.map(user => (\n      <Menu.Item\n        key={user.uid}\n        onClick={() => this.setChannel(user)}\n        active={this.state.activeChannel === user.uid}\n      >\n        <span>\n          <Image src={user.avatar} avatar />\n          {user.name}\n        </span>\n        <Icon name=\"rss\" color={user.status === \"offline\" ? \"red\" : \"green\"} />\n      </Menu.Item>\n    ));\n  };\n\n  render() {\n    return (\n      <Menu.Menu>\n        <Menu.Item>\n          <span>\n            <Icon name=\"lock\" /> PRIVATE MESSAGES\n          </span>\n        </Menu.Item>\n        {this.displayUsers(this.state.users)}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(null, { setChannel })(DirectMessages);\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\n\nconst SidePanel = ({ userData }) => {\n  return (\n    <Menu\n      style={{ backgroundColor: \"#40123e\" }}\n      fixed=\"left\"\n      vertical\n      inverted\n      size=\"large\"\n    >\n      <UserPanel userData={userData} />\n      <Channels userData={userData} />\n      <DirectMessages userData={userData} />\n    </Menu>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nconst MessagesHeader = ({ channelName, userAmount, handleChange }) => {\n  return (\n    <Segment clearing>\n      <Header fluid=\"true\" as=\"h2\" floated=\"left\">\n        <span>\n          {channelName}\n          <Icon name=\"star outline\" color=\"black\" />\n        </span>\n        <Header.Subheader>{userAmount}</Header.Subheader>\n      </Header>\n      <Header floated=\"right\">\n        <Input\n          size=\"mini\"\n          type=\"text\"\n          icon=\"search\"\n          name=\"searchTerm\"\n          placeholder=\"Search Messages\"\n          onChange={handleChange}\n        />\n      </Header>\n    </Segment>\n  );\n};\n\nexport default MessagesHeader;\n","import React, { useState } from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\n\nconst FileModal = ({ modal, closeModal, uploadFile }) => {\n  const [data, setData] = useState({\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  });\n\n  const addFile = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setData({ ...data, file: file });\n    }\n  };\n\n  const sendFile = () => {\n    if (data.file !== null) {\n      if (isAuthorized(data.file.name)) {\n        const metadata = { contentType: mime.lookup(data.file.name) };\n        uploadFile(data.file, metadata);\n        resetFileState();\n        closeModal();\n      }\n    }\n  };\n\n  const resetFileState = () => {\n    setData({ ...data, file: null });\n  };\n\n  const closeModalHere = () => {\n    closeModal();\n    resetFileState();\n  };\n\n  const isAuthorized = fileName =>\n    data.authorized.includes(mime.lookup(fileName));\n\n  return (\n    <Modal basic open={modal} onClose={closeModal}>\n      <Modal.Header>Select an image file</Modal.Header>\n      <Modal.Content>\n        <Input\n          onChange={addFile}\n          fluid\n          label=\"File types: JPEG, PNG\"\n          name=\"file\"\n          type=\"file\"\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"green\" onClick={sendFile} inverted>\n          <Icon name=\"checkmark\" /> Send\n        </Button>\n        <Button color=\"red\" inverted onClick={closeModalHere}>\n          <Icon name=\"remove\" /> Cancel\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percents }) =>\n  uploadState === 'uploading' && (\n    <Progress\n      className=\"progress_bar\"\n      percent={percents}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport FileModal from \"./FileModal\";\nimport firebase from \"../../firebase\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      message: \"\",\n      loading: false,\n      error: \"\",\n      modal: false,\n      uploadTask: null,\n      uploadState: \"\",\n      percentUploaded: 0,\n      storageRef: firebase.storage().ref()\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.props.user.uid,\n        name: this.props.user.displayName,\n        avatar: this.props.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  uploadFile = (file, metadata) => {\n    const filePath = `chat/public/${uuidv4()}.jpg`;\n    const pathToUpload = this.props.channel.id;\n    const ref = this.props.messageRef;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.log(err);\n            this.setState({ uploadState: \"error\", uploadTask: null });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({ uploadState: \"error\", uploadTask: null });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ error: err.message });\n      });\n  };\n\n  sendMessage = () => {\n    const { messageRef, channel } = this.props;\n    const setChannel = this.props.isPrivate\n      ? `${channel.id}/messages`\n      : channel.id;\n\n    if (this.state.message.length > 0) {\n      this.setState({ loading: true, error: \"\" });\n      messageRef\n        .child(setChannel)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\" });\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            message: \"\",\n            error: err.message\n          });\n        });\n    } else this.setState({ error: \"No data filled\" });\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n  render() {\n    const {\n      message,\n      error,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded\n    } = this.state;\n    return (\n      <Segment className=\"messageForm\">\n        <Input\n          value={message}\n          fluid\n          name=\"message\"\n          label={<Button icon=\"add\" />}\n          labelPosition=\"left\"\n          className={error.length > 0 ? \"error\" : null}\n          placeholder=\"Write your message\"\n          onChange={this.handleChange}\n          onKeyDown={e => (e.keyCode === 13 ? this.sendMessage() : null)}\n        />\n        <Button.Group icon widths=\"2\" style={{ marginTop: \"10px\" }}>\n          <Button\n            color=\"green\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            onClick={this.sendMessage}\n            disabled={loading}\n            className={loading ? \"loading\" : null}\n          />\n          <Button\n            color=\"red\"\n            content=\"Upload Media\"\n            disabled={uploadState === \"uploading\" ? true : false}\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n            onClick={this.openModal}\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar uploadState={uploadState} percents={percentUploaded} />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message_self\" : null;\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => {\n  return moment(timestamp).fromNow();\n};\n\nconst SingleMessage = ({ message, user }) => {\n  return (\n    <Comment>\n      <Comment.Avatar src={message.user.avatar} />\n      <Comment.Content className={isOnMessage(message, user)}>\n        <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n\n        {isImage(message) ? (\n          <Image src={message.image} className=\"message_image\" />\n        ) : (\n          <Comment.Text>{message.content}</Comment.Text>\n        )}\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default SingleMessage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport SingleMessage from \"./SingleMessage\";\n\nconst Messages = ({ channel, user, isPrivate }) => {\n  const [data, setData] = useState({\n    messages: [],\n    messageLoading: null,\n    messageRef: firebase.database().ref(\"messages\"),\n    privateMessageRef: firebase.database().ref(\"privateMessages\"),\n    listeners: [],\n    searchTerm: \"\"\n  });\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    if (channel && user) {\n      removeListeners(data.listeners);\n      setData(data => ({ ...data, messageLoading: true }));\n      addListeners(channel.id);\n    }\n\n    return () => {\n      data.messageRef.off();\n    };\n  }, [channel, user]);\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  const removeListeners = listeners => {\n    listeners.forEach(listener => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  };\n\n  const addToListeners = (id, ref, event) => {\n    const index = data.listeners.findIndex(listener => {\n      return (\n        listener.id === id && listener.ref === ref && listener.event === event\n      );\n    });\n\n    if (index === -1) {\n      const newListener = { id, ref, event };\n      setData(prev => ({\n        ...prev,\n        listeners: data.listeners.concat(newListener)\n      }));\n    }\n  };\n\n  const addListeners = channelId => {\n    addMessageListener(channelId);\n  };\n\n  const addMessageListener = channelId => {\n    const setChannel = isPrivate ? `${channelId}/messages` : channelId;\n    const setMessageRef = isPrivate ? data.privateMessageRef : data.messageRef;\n    let loadedMessages = [];\n\n    setData(prev => ({\n      ...prev,\n      messages: []\n    }));\n\n    setMessageRef.child(setChannel).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      setData(prev => ({\n        ...prev,\n        messages: loadedMessages,\n        messageLoading: false\n      }));\n    });\n\n    addToListeners(setChannel, setMessageRef, \"child_added\");\n  };\n\n  const displayMessages = messages => {\n    if (messages.length > 0) {\n      return messages\n        .filter(filter => {\n          if (data.searchTerm.length === 0) {\n            return filter;\n          } else if (\n            filter.content !== undefined &&\n            filter.content.includes(data.searchTerm)\n          ) {\n            return filter;\n          }\n          return null;\n        })\n        .map(message => (\n          <SingleMessage\n            key={message.timestamp}\n            message={message}\n            user={user}\n          />\n        ));\n    }\n  };\n\n  const handleChange = e => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const displayChannelName = channel => (channel ? channel.name : \"\");\n\n  const usersAmount = messages => {\n    const users = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    return users.length === 1\n      ? `${users.length} user`\n      : `${users.length} users`;\n  };\n\n  return (\n    <React.Fragment>\n      <MessagesHeader\n        handleChange={handleChange}\n        channelName={displayChannelName(channel)}\n        userAmount={usersAmount(data.messages)}\n      />\n      <Segment className=\"messages\" loading={data.messageLoading}>\n        <Comment.Group>\n          {displayMessages(data.messages)}\n          <div ref={messagesEndRef} />\n        </Comment.Group>\n      </Segment>\n      <MessageForm\n        messageRef={isPrivate ? data.privateMessageRef : data.messageRef}\n        isPrivate={isPrivate}\n        channel={channel}\n        user={user}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\n\nconst MetaPanel = () => {\n  return <div>MetaPanel</div>;\n};\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport ColorPanel from \"../../Components/ColorPanel/ColorPanel\";\nimport SidePanel from \"../../Components/SidePanel/SidePanel\";\nimport Messages from \"../../Components/Messages/Messages\";\nimport MetaPanel from \"../../Components/MetaPanel/MetaPanel\";\nimport { useSelector } from \"react-redux\";\n\nimport \"../../App.css\";\n\nconst MainPage = () => {\n  const data = useSelector(state =>\n    state.user.user !== null\n      ? {\n          user: state.user.user,\n          channel: state.channel.channel,\n          isPrivate: state.channel.isPrivate\n        }\n      : { user: \"\" }\n  );\n  return (\n    <Grid columns=\"equal\">\n      {/* <GridColumn> */}\n      <ColorPanel />\n      {/* </GridColumn> */}\n      {/* <GridColumn> */}\n      <SidePanel userData={data.user} />\n      {/* </GridColumn> */}\n      <GridColumn style={{ marginLeft: \"320px\" }}>\n        <Messages\n          channel={data.channel}\n          user={data.user}\n          isPrivate={data.isPrivate}\n        />\n      </GridColumn>\n      <GridColumn width={4}>\n        <MetaPanel />\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content=\"Loading\" />\n    </Dimmer>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport firebase from \"./firebase\";\nimport Register from \"./Pages/Register/Register\";\nimport Login from \"./Pages/Login/Login\";\nimport MainPage from \"./Pages/MainPage/MainPage\";\nimport Spinner from \"./Components/Spinner/Spiner\";\nimport { setUser } from \"./Store/Actions/setUser\";\nimport { handleOnlineStatus } from \"./Helpers/handleOnlineStatus\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    //firebase is mounted, and this function is always active\n    firebase.auth().onAuthStateChanged(user => {\n      if (user !== null) {\n        this.props.setUser(user);\n        handleOnlineStatus(user.uid, \"add\");\n        window.addEventListener(\"beforeunload\", () => {\n          handleOnlineStatus(user.uid);\n        });\n        this.props.history.push(\"/plackApp\");\n      } else {\n        this.props.setUser(null);\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/plackApp\" component={MainPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nexport default withRouter(connect(mapStateToProps, { setUser })(App));\n","export const setUser = user => ({\n  type: \"SET_USER\",\n  user\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { allReducer } from \"./Store/Reducers/index\";\nimport Thunk from \"redux-thunk\";\n// import logger from \"redux-logger\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport './index.css'\n\nconst store = createStore(allReducer, applyMiddleware(Thunk));\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}