{"version":3,"sources":["Store/Reducers/user.js","Store/Reducers/channel.js","Store/Reducers/index.js","firebase.js","Pages/Register/Register.js","Pages/Login/Login.js","Components/ColorPanel/ColorPanel.js","Components/SidePanel/UserPanel.js","Components/SidePanel/Channels.js","Store/Actions/setChannel.js","Components/SidePanel/SidePanel.js","Components/Messages/MessagesHeader.js","Components/Messages/MessageForm.js","Components/Messages/Messages.js","Components/MetaPanel/MetaPanel.js","Pages/MainPage/MainPage.js","Components/Spinner/Spiner.js","App.js","Store/Actions/setUser.js","index.js"],"names":["initialState","user","isLoading","channel","appReducer","combineReducers","state","action","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Register","useState","username","email","password","passwordConfirm","errors","loading","usersRef","database","ref","form","setForm","handleChange","e","target","name","value","formIsNotEmpty","length","passwordsMatch","saveUser","createdUser","child","uid","set","displayName","avatar","photoURL","errorMessage","Message","color","Grid","className","textAlign","verticalAlign","Column","style","maxWidth","Header","as","Icon","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","Button","disabled","onClick","preventDefault","auth","createUserWithEmailAndPassword","then","updateProfile","md5","catch","err","console","log","message","Link","to","Login","isFormValid","prev","signInWithEmailAndPassword","signedUser","ColorPanel","Sidebar","Menu","inverted","vertical","visible","width","Divider","handleSignout","signOut","UserPanel","userData","dropdownOptions","key","text","GridColumn","GridRow","padding","margin","floated","HeaderContent","Dropdown","trigger","Image","src","spaced","options","Channels","modal","channelName","channelDetails","channels","channelsRef","activeChannel","data","setData","dispatch","useDispatch","useEffect","loadedChannels","on","snap","push","val","addListeners","off","closeModal","handleSubmit","addChannel","newChannel","id","details","createdBy","update","Fragment","paddingBottom","Item","map","setChannel","changeChannel","active","Modal","basic","open","onClose","Content","onSubmit","Field","label","Actions","SidePanel","backgroundColor","fixed","MessagesHeader","clearing","Subheader","MessageForm","messageRef","error","labelPosition","Group","widths","marginTop","content","timestamp","ServerValue","TIMESTAMP","Messages","Comment","MetaPanel","MainPage","useSelector","columns","marginLeft","Spinner","Dimmer","Loader","App","onAuthStateChanged","props","setUser","history","this","Switch","Route","exact","path","component","React","Component","withRouter","connect","store","createStore","undefined","applyMiddleware","Thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a66d2fd.chunk.js","sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true\n};\n\nexport const user = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  channel: null\n};\n\nexport const channel = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_CHANNEL\":\n      return {\n        ...state,\n        channel: action.channel\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { user } from \"./user\";\nimport { channel } from \"./channel\";\n\nconst appReducer = combineReducers({\n  user,\n  channel\n});\n\nexport const allReducer = (state, action) => {\n  if (action.type === \"RESET_APP\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBa643TjTtPD0rnjdOfuFLpYyzDdsqr0Iw\",\n  authDomain: \"plack-23141.firebaseapp.com\",\n  databaseURL: \"https://plack-23141.firebaseio.com\",\n  projectId: \"plack-23141\",\n  storageBucket: \"plack-23141.appspot.com\",\n  messagingSenderId: \"360318459062\",\n  appId: \"1:360318459062:web:a7d366336084667dacda17\",\n  measurementId: \"G-E16F9YZVBR\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Register = () => {\n  const [form, setForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    errors: \"\",\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isFormValid = () => {\n    if (!formIsNotEmpty(form)) {\n      setForm({ ...form, errors: \"Fill all fields\" });\n      return false;\n    } else if (!passwordsMatch(form)) {\n      setForm({\n        ...form,\n        errors: \"Passwords do not match or password to short\"\n      });\n      return false;\n    } else return true;\n  };\n\n  const formIsNotEmpty = ({ username, password, email }) => {\n    return username.length && password.length && email.length > 0;\n  };\n\n  const passwordsMatch = ({ password, passwordConfirm }) => {\n    return password === passwordConfirm && password.length >= 6;\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid()) {\n      e.preventDefault();\n      setForm({ ...form, loading: true, errors: \"\" });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(form.email, form.password)\n        .then(createdUser => {\n          createdUser.user\n            .updateProfile({\n              displayName: form.username,\n              photoURL: `https://www.gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              saveUser(createdUser);\n            })\n            .catch(err => {\n              console.log(err);\n              setForm({ ...form, loading: false, errors: err.message });\n            });\n        })\n        .catch(err => {\n          setForm({ ...form, loading: false, errors: err.message });\n          console.log(err);\n        });\n    }\n  };\n\n  const saveUser = createdUser => {\n    return form.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Register for Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"username\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              onChange={handleChange}\n              type=\"text\"\n            />\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Form.Input\n              fluid\n              name=\"passwordConfirm\"\n              icon=\"repeat\"\n              iconPosition=\"left\"\n              placeholder=\"Repeat password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Submit\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Already a user? <Link to=\"/login\">Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Login = () => {\n  const [form, setForm] = useState({\n    email: null,\n    password: null,\n    errors: \"\",\n    loading: false\n  });\n\n  const handleChange = e => {\n    setForm(({\n      ...form,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid(form)) {\n      e.preventDefault();\n      setForm(prev=>({ ...prev, loading: true, errors: \"\" }));\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(form.email, form.password)\n        .then(signedUser => {\n          setForm(prev=>({ ...prev, loading: false }));\n        })\n        .catch(err => {\n          console.log(err);\n          setForm(prev=>({ ...prev, loading: false, errors: err.message }));\n        });\n    }\n  };\n\n  const isFormValid = ({ email, password }) =>\n    email && password ? true : setForm(prev=>({ ...prev, errors: \"Fill all fields\" }));\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Login to Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Not a user? <Link to=\"/register\">Register</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Sidebar, Menu, Divider, Button } from \"semantic-ui-react\";\n\nconst ColorPanel = () => {\n  return (\n    <Sidebar\n      as={Menu}\n      icon=\"labeled\"\n      inverted\n    //   animation=\"overlay\"\n      vertical\n      visible\n      width=\"very thin\"\n    >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" />\n    </Sidebar>\n  );\n};\n\nexport default ColorPanel;\n","import React from \"react\";\nimport {\n  Grid,\n  GridColumn,\n  GridRow,\n  Header,\n  HeaderContent,\n  Icon,\n  Dropdown,\n  Image\n} from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nconst handleSignout = () => {\n  firebase.auth().signOut();\n};\n\nconst UserPanel = ({ userData }) => {\n  const dropdownOptions = [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{userData.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={handleSignout}>Sign Out</span>\n    }\n  ];\n\n  return (\n    <Grid>\n      <GridColumn>\n        <GridRow style={{ padding: \"1.2em\", margin: 0 }}>\n          <Header inverted floated=\"left\" as=\"h2\">\n            <Icon name=\"code\" />\n            <HeaderContent>Plack</HeaderContent>\n          </Header>\n          <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n            <Dropdown\n              trigger={\n                <span>\n                  <Image src={userData.photoURL} spaced=\"right\" avatar />\n                  {userData.displayName}\n                </span>\n              }\n              options={dropdownOptions}\n            />\n          </Header>\n        </GridRow>\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default UserPanel;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\nimport { setChannel } from \"../../Store/Actions/setChannel\";\nimport firebase from \"../../firebase\";\n\nconst Channels = ({ userData }) => {\n  const [data, setData] = useState({\n    modal: false,\n    channelName: \"\",\n    channelDetails: \"\",\n    channels: [],\n    channelsRef: firebase.database().ref(\"channels\"),\n    // firstLoad: true\n    activeChannel: null\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const addListeners = () => {\n      let loadedChannels = [];\n      data.channelsRef.on(\"child_added\", snap => {\n        loadedChannels.push(snap.val());\n        setData(prev => ({ ...prev, channels: loadedChannels }));\n      });\n    };\n    addListeners();\n    return () => data.channelsRef.off();\n  }, [data.channelsRef]);\n\n  const closeModal = () => setData(prev => ({ ...prev, modal: false }));\n\n  const openModal = () => setData(prev => ({ ...prev, modal: true }));\n\n  const handleChange = e => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isFormValid(data)) {\n      addChannel();\n    }\n  };\n\n  const addChannel = () => {\n    const key = data.channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: data.channelName,\n      details: data.channelDetails,\n      createdBy: {\n        name: userData.displayName,\n        avatar: userData.photoURL\n      }\n    };\n    data.channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        setData(prev => ({ ...prev, channelName: \"\", channelDetails: \"\" }));\n        closeModal();\n        console.log(\"added channel\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  const isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  const changeChannel = channel => {\n    dispatch(setChannel(channel));\n    setData(prev => ({ ...prev, activeChannel: channel.id }));\n  };\n\n  const displayChannels = channels => {\n    return channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => changeChannel(channel)}\n        name={channel.name}\n        active={data.activeChannel === channel.id}\n      >\n        #{channel.name}\n      </Menu.Item>\n    ));\n  };\n  return (\n    <React.Fragment>\n      <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n        <Menu.Item>\n          <span>\n            <Icon name=\"exchange\" /> CHANNELS\n          </span>\n          ({data.channels.length}) <Icon name=\"add\" onClick={openModal} />\n        </Menu.Item>\n        {displayChannels(data.channels)}\n      </Menu.Menu>\n\n      <Modal basic open={data.modal} onClose={closeModal}>\n        <Modal.Header>Add a Channel</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={handleSubmit}>\n            <Form.Field>\n              <Input\n                fluid\n                label=\"Name of channel\"\n                name=\"channelName\"\n                onChange={handleChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Input\n                fluid\n                label=\"About the Channel\"\n                name=\"channelDetails\"\n                onChange={handleChange}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" inverted onClick={handleSubmit}>\n            <Icon name=\"checkmark\" /> Add\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default Channels;\n","export const setChannel = channel =>({\n    type: 'SET_CHANNEL',\n    channel\n})","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\n\nconst SidePanel = ({ userData }) => {\n  return (\n    <Menu\n      style={{ backgroundColor: \"#40123e\" }}\n      fixed=\"left\"\n      vertical\n      inverted\n      size=\"large\"\n    >\n      <UserPanel userData={userData} />\n      <Channels userData={userData} />\n    </Menu>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nconst MessagesHeader = () => {\n  return (\n    <Segment clearing>\n      <Header fluid=\"true\" as=\"h2\" floated=\"left\">\n        <span>\n          Channel\n          <Icon name=\"star outline\" color=\"black\" />\n        </span>\n        <Header.Subheader>2 Users</Header.Subheader>\n      </Header>\n      {/* channel title */}\n      <Header floated=\"right\">\n        <Input\n          size=\"mini\"\n          type=\"text\"\n          icon=\"search\"\n          name=\"searchTerm\"\n          placeholder=\"Search Messages\"\n        />\n      </Header>\n    </Segment>\n  );\n};\n\nexport default MessagesHeader;\n","import React, { useState } from \"react\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nconst MessageForm = ({ messageRef, channel, user }) => {\n  const [data, setData] = useState({\n    message: \"\",\n    loading: false,\n    error: \"\"\n  });\n\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const createMessage = () => {\n    const message = {\n      content: data.message,\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: user.uid,\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n    return message;\n  };\n\n  const sendMessage = () => {\n    if (data.message.length > 0) {\n      setData(prev => ({ ...prev, loading: true, error: \"\" }));\n      messageRef\n        .child(channel.id)\n        .push()\n        .set(createMessage())\n        .then(() => {\n          setData(prev => ({ ...prev, loading: false, message: \"\" }));\n        })\n        .catch(err => {\n          console.log(err);\n          setData(prev => ({\n            ...prev,\n            loading: false,\n            message: \"\",\n            error: err.message\n          }));\n        });\n    } else setData(prev => ({ ...prev, error: \"No data filled\" }));\n  };\n\n  return (\n    <Segment className=\"messageForm\">\n      <Input\n        fluid\n        name=\"message\"\n        label={<Button icon=\"add\" />}\n        labelPosition=\"left\"\n        className={data.error.length > 0 ? \"error\" : null}\n        placeholder=\"Write your message\"\n        onChange={handleChange}\n      />\n      <Button.Group icon widths=\"2\" style={{ marginTop: \"10px\" }}>\n        <Button\n          color=\"green\"\n          content=\"Add Reply\"\n          labelPosition=\"left\"\n          icon=\"edit\"\n          onClick={sendMessage}\n        />\n        <Button\n          color=\"red\"\n          content=\"Upload Media\"\n          labelPosition=\"right\"\n          icon=\"cloud upload\"\n        />\n      </Button.Group>\n    </Segment>\n  );\n};\n\nexport default MessageForm;\n","import React, { useState } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\n\nconst Messages = ({ channel, user }) => {\n  const [message, setMessage] = useState(firebase.database().ref(\"messages\"));\n  return (\n    <React.Fragment>\n      <MessagesHeader />\n      <Segment className=\"messages\">\n        <Comment.Group></Comment.Group>\n      </Segment>\n      <MessageForm messageRef={message} channel={channel} user={user} />\n    </React.Fragment>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\n\nconst MetaPanel = () =>{\n    return(\n        <div>\n            MetaPanel\n        </div>\n    )\n}\n\nexport default MetaPanel;","import React from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport ColorPanel from \"../../Components/ColorPanel/ColorPanel\";\nimport SidePanel from \"../../Components/SidePanel/SidePanel\";\nimport Messages from \"../../Components/Messages/Messages\";\nimport MetaPanel from \"../../Components/MetaPanel/MetaPanel\";\nimport { useSelector } from \"react-redux\";\n\nimport \"../../App.css\";\n\nconst MainPage = () => {\n  const data = useSelector(state =>\n    state.user.user !== null\n      ? { user: state.user.user, channel: state.channel.channel }\n      : { user: \"\" }\n  );\n  return (\n    <Grid columns=\"equal\" className=\"u-heigth100vh\">\n      {/* <GridColumn> */}\n      <ColorPanel />\n      {/* </GridColumn> */}\n      {/* <GridColumn> */}\n      <SidePanel userData={data.user} />\n      {/* </GridColumn> */}\n      <GridColumn style={{ marginLeft: \"320px\" }}>\n        <Messages channel={data.channel} user={data.user} />\n      </GridColumn>\n      <GridColumn width={4}>\n        <MetaPanel />\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content=\"Loading\" />\n    </Dimmer>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport firebase from \"./firebase\";\nimport Register from \"./Pages/Register/Register\";\nimport Login from \"./Pages/Login/Login\";\nimport MainPage from \"./Pages/MainPage/MainPage\";\nimport Spinner from \"./Components/Spinner/Spiner\";\nimport { setUser } from \"./Store/Actions/setUser\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    //firebase is mounted, and this function is always active\n    firebase.auth().onAuthStateChanged(user => {\n      if (user !== null) {\n        this.props.setUser(user)\n        this.props.history.push(\"/\");\n      } else {\n        this.props.setUser(null);\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nexport default withRouter(connect(mapStateToProps, { setUser })(App));\n","export const setUser = user => ({\n  type: \"SET_USER\",\n  user\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { allReducer } from \"./Store/Reducers/index\";\nimport Thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst store = createStore(allReducer, applyMiddleware(Thunk, logger));\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}