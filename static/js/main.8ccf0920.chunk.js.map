{"version":3,"sources":["Store/Reducers/user.js","Store/Reducers/channel.js","Store/Reducers/index.js","firebase.js","Pages/Register/Register.js","Pages/Login/Login.js","Components/ColorPanel/ColorPanel.js","Components/SidePanel/UserPanel.js","Store/Actions/resetApp.js","Components/SidePanel/Channels.js","Store/Actions/setChannel.js","Components/SidePanel/SidePanel.js","Components/Messages/MessagesHeader.js","Components/Messages/FileModal.js","Components/Messages/ProgressBar.js","Components/Messages/MessageForm.js","Components/Messages/SingleMessage.js","Components/Messages/Messages.js","Components/MetaPanel/MetaPanel.js","Pages/MainPage/MainPage.js","Components/Spinner/Spiner.js","App.js","Store/Actions/setUser.js","index.js"],"names":["initialState","user","isLoading","channel","appReducer","combineReducers","state","action","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Register","useState","username","email","password","passwordConfirm","errors","loading","usersRef","database","ref","form","setForm","handleChange","e","target","name","value","formIsNotEmpty","length","passwordsMatch","saveUser","createdUser","child","uid","set","displayName","avatar","photoURL","errorMessage","Message","color","Grid","className","textAlign","verticalAlign","Column","style","maxWidth","Header","as","Icon","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","Button","disabled","onClick","preventDefault","auth","createUserWithEmailAndPassword","then","updateProfile","md5","catch","err","console","log","message","to","Login","isFormValid","prev","signInWithEmailAndPassword","signedUser","ColorPanel","Sidebar","Menu","inverted","vertical","visible","width","Divider","UserPanel","userData","dispatch","useDispatch","dropdownOptions","key","text","signOut","GridColumn","GridRow","padding","margin","floated","HeaderContent","Dropdown","trigger","Image","src","spaced","options","Channels","modal","channelName","channelDetails","channels","channelsRef","firstLoad","activeChannel","addListeners","loadedChannels","on","snap","push","val","setState","setFirstChannel","props","setChannel","id","closeModal","openModal","handleSubmit","addChannel","newChannel","details","createdBy","update","changeChannel","displayChannels","map","Item","active","this","off","Fragment","paddingBottom","Modal","basic","open","onClose","Content","Field","onSubmit","label","Actions","React","Component","connect","SidePanel","backgroundColor","fixed","MessagesHeader","userAmount","clearing","Subheader","FileModal","uploadFile","file","authorized","data","setData","resetFileState","isAuthorized","fileName","includes","mime","lookup","files","metadata","contentType","ProgressBar","uploadState","percents","Progress","percent","progress","indicating","MessageForm","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","filePath","uuidv4","pathToUpload","messageRef","uploadTask","storageRef","put","percentUploaded","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadUrl","sendFileMessage","error","sendMessage","storage","labelPosition","onKeyDown","keyCode","Group","widths","marginTop","content","isOnMessage","SingleMessage","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","image","Text","Messages","messages","messageLoading","listeners","searchTerm","messagesEndRef","useRef","useEffect","removeListeners","current","scrollIntoView","behavior","forEach","listener","event","channelId","addMessageListener","loadedMessages","findIndex","newListener","concat","addToListeners","displayChannelName","users","reduce","acc","usersAmount","filter","undefined","displayMessages","MetaPanel","MainPage","useSelector","columns","marginLeft","Spinner","Dimmer","Loader","App","onAuthStateChanged","setUser","history","exact","path","component","withRouter","store","createStore","applyMiddleware","Thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"sPAAMA,EAAe,CACnBC,KAAM,KACNC,WAAW,GCFPF,EAAe,CACnBG,QAAS,MCGLC,EAAaC,YAAgB,CACjCJ,KFAkB,WAAmC,IAAlCK,EAAiC,uDAAzBN,EAAcO,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,eACFF,EADL,CAEEL,KAAMM,EAAON,KACbC,WAAW,IAEf,QACE,OAAOI,IERXH,QDFqB,WAAmC,IAAlCG,EAAiC,uDAAzBN,EAAcO,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,eACFF,EADL,CAEEH,QAASI,EAAOJ,UAGpB,QACE,OAAOG,M,0HEEbG,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIFT,QAAf,E,gGC+IeU,G,OAjJE,WAAO,IAAD,EACGC,mBAAS,CAC/BC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,OAAQ,GACRC,SAAS,EACTC,SAAUlB,EAASmB,WAAWC,IAAI,WARf,mBACdC,EADc,KACRC,EADQ,KAWfC,EAAe,SAAAC,GACnBF,EAAQ,eACHD,EADE,eAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAiBxBC,EAAiB,SAAC,GAAmC,IAAjChB,EAAgC,EAAhCA,SAAUE,EAAsB,EAAtBA,SAAUD,EAAY,EAAZA,MAC5C,OAAOD,EAASiB,QAAUf,EAASe,QAAUhB,EAAMgB,OAAS,GAGxDC,EAAiB,SAAC,GAAmC,IAAjChB,EAAgC,EAAhCA,SACxB,OAAOA,IADiD,EAAtBC,iBACKD,EAASe,QAAU,GAiCtDE,EAAW,SAAAC,GACf,OAAOX,EAAKH,SAASe,MAAMD,EAAYxC,KAAK0C,KAAKC,IAAI,CACnDT,KAAMM,EAAYxC,KAAK4C,YACvBC,OAAQL,EAAYxC,KAAK8C,YAIvBC,EAAe,kBAACC,EAAA,EAAD,CAASC,MAAM,OAAOpB,EAAKL,QAEhD,OACE,kBAAC0B,EAAA,EAAD,CAAMC,UAAU,gBAAgBC,UAAU,SAASC,cAAc,UAC/D,kBAACH,EAAA,EAAKI,OAAN,CAAaC,MAAO,CAAEC,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKT,MAAM,MAAMG,UAAU,UACpC,kBAACO,EAAA,EAAD,CAAMzB,KAAK,OAAOe,MAAM,UAD1B,sBAIA,kBAACW,EAAA,EAAD,CAAMC,KAAK,SACT,kBAACC,EAAA,EAAD,CAASC,SAAO,GACd,kBAACH,EAAA,EAAKI,MAAN,CACEC,OAAK,EACL/B,KAAK,WACLgC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,SAAUtC,EACVxB,KAAK,SAEP,kBAACqD,EAAA,EAAKI,MAAN,CACEC,OAAK,EACL/B,KAAK,QACLgC,KAAK,OACLC,aAAa,OACbC,YAAY,eACZC,SAAUtC,EACVxB,KAAK,UAEP,kBAACqD,EAAA,EAAKI,MAAN,CACEC,OAAK,EACL/B,KAAK,WACLgC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,SAAUtC,EACVxB,KAAK,aAEP,kBAACqD,EAAA,EAAKI,MAAN,CACEC,OAAK,EACL/B,KAAK,kBACLgC,KAAK,SACLC,aAAa,OACbC,YAAY,kBACZC,SAAUtC,EACVxB,KAAK,aAGP,kBAAC+D,EAAA,EAAD,CACEC,SAAU1C,EAAKJ,QACf0B,UAAWtB,EAAKJ,QAAU,UAAY,KACtC+C,QAxFS,SAAAxC,IApBdI,EAAeP,GAGRS,EAAeT,KACzBC,EAAQ,eACHD,EADE,CAELL,OAAQ,iDAEH,IAPPM,EAAQ,eAAKD,EAAN,CAAYL,OAAQ,qBACpB,MAoBPQ,EAAEyC,iBACF3C,EAAQ,eAAKD,EAAN,CAAYJ,SAAS,EAAMD,OAAQ,MAC1ChB,EACGkE,OACAC,+BAA+B9C,EAAKR,MAAOQ,EAAKP,UAChDsD,MAAK,SAAApC,GACJA,EAAYxC,KACT6E,cAAc,CACbjC,YAAaf,EAAKT,SAClB0B,SAAS,mCAAD,OAAqCgC,IAC3CtC,EAAYxC,KAAKqB,OADX,kBAITuD,MAAK,WACJrC,EAASC,MAEVuC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZlD,EAAQ,eAAKD,EAAN,CAAYJ,SAAS,EAAOD,OAAQwD,EAAIG,iBAGpDJ,OAAM,SAAAC,GACLlD,EAAQ,eAAKD,EAAN,CAAYJ,SAAS,EAAOD,OAAQwD,EAAIG,WAC/CF,QAAQC,IAAIF,QAgER/B,MAAM,MACNgB,OAAK,EACLJ,KAAK,SANP,YAYHhC,EAAKL,OAAOa,OAAS,EAAIU,EAAe,KACzC,kBAACC,EAAA,EAAD,wBACkB,kBAAC,IAAD,CAAMoC,GAAG,UAAT,cCpDXC,EAvFD,WAAO,IAAD,EACMlE,mBAAS,CAC/BE,MAAO,KACPC,SAAU,KACVE,OAAQ,GACRC,SAAS,IALO,mBACXI,EADW,KACLC,EADK,KAQZC,EAAe,SAAAC,GACnBF,EAAQ,eACHD,EADE,eAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAqBxBmD,EAAc,SAAC,GAAD,IAAGjE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,SAClBD,IAASC,IAELQ,GAAQ,SAAAyD,GAAI,sBAAUA,EAAV,CAAgB/D,OAAQ,wBAEpCuB,EAAe,kBAACC,EAAA,EAAD,CAASC,MAAM,OAAOpB,EAAKL,QAEhD,OACE,kBAAC0B,EAAA,EAAD,CAAMC,UAAU,gBAAgBC,UAAU,SAASC,cAAc,UAC/D,kBAACH,EAAA,EAAKI,OAAN,CAAaC,MAAO,CAAEC,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKT,MAAM,MAAMG,UAAU,UACpC,kBAACO,EAAA,EAAD,CAAMzB,KAAK,OAAOe,MAAM,UAD1B,kBAIA,kBAACW,EAAA,EAAD,CAAMC,KAAK,SACT,kBAACC,EAAA,EAAD,CAASC,SAAO,GACd,kBAACH,EAAA,EAAKI,MAAN,CACEC,OAAK,EACL/B,KAAK,QACLgC,KAAK,OACLC,aAAa,OACbC,YAAY,eACZC,SAAUtC,EACVxB,KAAK,UAEP,kBAACqD,EAAA,EAAKI,MAAN,CACEC,OAAK,EACL/B,KAAK,WACLgC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,SAAUtC,EACVxB,KAAK,aAEP,kBAAC+D,EAAA,EAAD,CACEC,SAAU1C,EAAKJ,QACf0B,UAAWtB,EAAKJ,QAAU,UAAY,KACtC+C,QAtDS,SAAAxC,GACfsD,EAAYzD,KACdG,EAAEyC,iBACF3C,GAAQ,SAAAyD,GAAI,sBAAUA,EAAV,CAAgB9D,SAAS,EAAMD,OAAQ,QACnDhB,EACGkE,OACAc,2BAA2B3D,EAAKR,MAAOQ,EAAKP,UAC5CsD,MAAK,SAAAa,GACJ3D,GAAQ,SAAAyD,GAAI,sBAAUA,EAAV,CAAgB9D,SAAS,UAEtCsD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZlD,GAAQ,SAAAyD,GAAI,sBAAUA,EAAV,CAAgB9D,SAAS,EAAOD,OAAQwD,EAAIG,kBA2CpDlC,MAAM,MACNgB,OAAK,EACLJ,KAAK,SANP,WAYHhC,EAAKL,OAAOa,OAAS,EAAIU,EAAe,KACzC,kBAACC,EAAA,EAAD,oBACc,kBAAC,IAAD,CAAMoC,GAAG,aAAT,gB,oCC1EPM,EAjBI,WACjB,OACE,kBAACC,EAAA,EAAD,CACEjC,GAAIkC,IACJ1B,KAAK,UACL2B,UAAQ,EAERC,UAAQ,EACRC,SAAO,EACPC,MAAM,aAEN,kBAACC,EAAA,EAAD,MACA,kBAAC3B,EAAA,EAAD,CAAQJ,KAAK,MAAML,KAAK,QAAQZ,MAAM,W,oCCmD7BiD,EAnDG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAWC,cAKXC,EAAkB,CACtB,CACEC,IAAK,OACLC,KACE,8CACe,gCAASL,EAASvD,cAGnC2B,UAAU,GAEZ,CACEgC,IAAK,SACLC,KAAM,gDAER,CACED,IAAK,UACLC,KAAM,0BAAMhC,QApBM,WACpBhE,EAASkE,OAAO+B,UAChBL,ECnB2B,CAC7B7F,KAAM,gBDoCI,cAIV,OACE,kBAAC2C,EAAA,EAAD,KACE,kBAACwD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASpD,MAAO,CAAEqD,QAAS,QAASC,OAAQ,IAC1C,kBAACpD,EAAA,EAAD,CAAQoC,UAAQ,EAACiB,QAAQ,OAAOpD,GAAG,MACjC,kBAACC,EAAA,EAAD,CAAMzB,KAAK,SACX,kBAAC6E,EAAA,EAAD,eAEF,kBAACtD,EAAA,EAAD,CAAQF,MAAO,CAAEqD,QAAS,UAAYlD,GAAG,KAAKmC,UAAQ,GACpD,kBAACmB,EAAA,EAAD,CACEC,QACE,8BACE,kBAACC,EAAA,EAAD,CAAOC,IAAKhB,EAASrD,SAAUsE,OAAO,QAAQvE,QAAM,IACnDsD,EAASvD,aAGdyE,QAASf,S,kBEnDjBgB,E,2MACJjH,MAAQ,CACNkH,OAAO,EACPC,YAAa,GACbC,eAAgB,GAChBC,SAAU,GACVC,YAAanH,EAASmB,WAAWC,IAAI,YACrCgG,WAAW,EACXC,cAAe,M,EAYjBC,aAAe,WACb,IAAIC,EAAiB,GACrB,EAAK1H,MAAMsH,YAAYK,GAAG,eAAe,SAAAC,GACvCF,EAAeG,KAAKD,EAAKE,OACzB,EAAKC,SAAS,CAAEV,SAAUK,IAAkB,kBAAM,EAAKM,yB,EAI3DA,gBAAkB,WACZ,EAAKhI,MAAMuH,YACb,EAAKU,MAAMC,WAAW,EAAKlI,MAAMqH,SAAS,IAC1C,EAAKU,SAAS,CACZR,WAAW,EACXC,cAAe,EAAKxH,MAAMqH,SAAS,GAAGc,O,EAK5CC,WAAa,kBAAM,EAAKL,SAAS,CAAEb,OAAO,K,EAE1CmB,UAAY,kBAAM,EAAKN,SAAS,CAAEb,OAAO,K,EAEzCxF,aAAe,SAAAC,GACb,EAAKoG,SAAL,eAAiBpG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,S,EAG5CwG,aAAe,SAAA3G,GACbA,EAAEyC,iBACE,EAAKa,YAAY,EAAKjF,QACxB,EAAKuI,c,EAITA,WAAa,WACX,IAAMrC,EAAM,EAAKlG,MAAMsH,YAAYO,OAAO3B,IAClCJ,EAAa,EAAKmC,MAAlBnC,SAFS,EAGuB,EAAK9F,MAEvCwI,EAAa,CACjBL,GAAIjC,EACJrE,KAPe,EAGTsF,YAKNsB,QARe,EAGIrB,eAMnBsB,UAAW,CACT7G,KAAMiE,EAASvD,YACfC,OAAQsD,EAASrD,WAGrB,EAAKzC,MAAMsH,YACRlF,MAAM8D,GACNyC,OAAOH,GACPjE,MAAK,WACJ,EAAKwD,SAAS,CAAEZ,YAAa,GAAIC,eAAgB,KACjD,EAAKgB,gBAEN1D,OAAM,SAAAC,GACLC,QAAQC,IAAIF,O,EAIlBM,YAAc,gBAAGkC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAhB,OACZD,GAAeC,G,EAEjBwB,cAAgB,SAAA/I,GACd,EAAKoI,MAAMC,WAAWrI,GACtB,EAAKkI,SAAS,CAAEP,cAAe3H,EAAQsI,M,EAGzCU,gBAAkB,SAAAxB,GAChB,OAAOA,EAASyB,KAAI,SAAAjJ,GAAO,OACzB,kBAAC0F,EAAA,EAAKwD,KAAN,CACE7C,IAAKrG,EAAQsI,GACbhE,QAAS,kBAAM,EAAKyE,cAAc/I,IAClCgC,KAAMhC,EAAQgC,KACdmH,OAAQ,EAAKhJ,MAAMwH,gBAAkB3H,EAAQsI,IAJ/C,IAMItI,EAAQgC,U,mFAnFdoH,KAAKxB,iB,6CAIL7C,QAAQC,IAAI,WACZoE,KAAKjJ,MAAMsH,YAAY4B,Q,+BAmFvB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC5D,EAAA,EAAKA,KAAN,CAAWrC,MAAO,CAAEkG,cAAe,QACjC,kBAAC7D,EAAA,EAAKwD,KAAN,KACE,8BACE,kBAACzF,EAAA,EAAD,CAAMzB,KAAK,aADb,aADF,IAIIoH,KAAKjJ,MAAMqH,SAASrF,OAJxB,IAIiC,IAC/B,kBAACsB,EAAA,EAAD,CAAMzB,KAAK,MAAMsC,QAAS8E,KAAKZ,aAEhCY,KAAKJ,gBAAgBI,KAAKjJ,MAAMqH,WAGnC,kBAACgC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMN,KAAKjJ,MAAMkH,MAAOsC,QAASP,KAAKb,YACjD,kBAACiB,EAAA,EAAMjG,OAAP,sBACA,kBAACiG,EAAA,EAAMI,QAAP,KACE,kBAAClG,EAAA,EAAKmG,MAAN,CAAYC,SAAUV,KAAKX,cACzB,kBAAC/E,EAAA,EAAKmG,MAAN,KACE,kBAAC/F,EAAA,EAAD,CACEC,OAAK,EACLgG,MAAM,kBACN/H,KAAK,cACLmC,SAAUiF,KAAKvH,gBAGnB,kBAAC6B,EAAA,EAAKmG,MAAN,KACE,kBAAC/F,EAAA,EAAD,CACEC,OAAK,EACLgG,MAAM,oBACN/H,KAAK,iBACLmC,SAAUiF,KAAKvH,kBAKvB,kBAAC2H,EAAA,EAAMQ,QAAP,KACE,kBAAC5F,EAAA,EAAD,CAAQrB,MAAM,QAAQ4C,UAAQ,EAACrB,QAAS8E,KAAKX,cAC3C,kBAAChF,EAAA,EAAD,CAAMzB,KAAK,cADb,QAGA,kBAACoC,EAAA,EAAD,CAAQrB,MAAM,MAAM4C,UAAQ,EAACrB,QAAS8E,KAAKb,YACzC,kBAAC9E,EAAA,EAAD,CAAMzB,KAAK,WADb,kB,GA3IWiI,IAAMC,WAqJdC,cAAQ,KAAM,CAAE9B,WC3JL,SAAArI,GAAO,MAAI,CACjCK,KAAM,cACNL,aDyJWmK,CAA8B/C,GEvI9BgD,EAfG,SAAC,GAAkB,IAAhBnE,EAAe,EAAfA,SACnB,OACE,kBAACP,EAAA,EAAD,CACErC,MAAO,CAAEgH,gBAAiB,WAC1BC,MAAM,OACN1E,UAAQ,EACRD,UAAQ,EACRhC,KAAK,SAEL,kBAAC,EAAD,CAAWsC,SAAUA,IACrB,kBAAC,EAAD,CAAUA,SAAUA,M,UCYXsE,GAxBQ,SAAC,GAA+C,IAA7CjD,EAA4C,EAA5CA,YAAakD,EAA+B,EAA/BA,WAAY3I,EAAmB,EAAnBA,aACjD,OACE,kBAAC+B,EAAA,EAAD,CAAS6G,UAAQ,GACf,kBAAClH,EAAA,EAAD,CAAQQ,MAAM,OAAOP,GAAG,KAAKoD,QAAQ,QACnC,8BACGU,EACD,kBAAC7D,EAAA,EAAD,CAAMzB,KAAK,eAAee,MAAM,WAElC,kBAACQ,EAAA,EAAOmH,UAAR,KAAmBF,IAErB,kBAACjH,EAAA,EAAD,CAAQqD,QAAQ,SACd,kBAAC9C,EAAA,EAAD,CACEH,KAAK,OACLtD,KAAK,OACL2D,KAAK,SACLhC,KAAK,aACLkC,YAAY,kBACZC,SAAUtC,O,+BC4CL8I,GA5DG,SAAC,GAAuC,IAArCtD,EAAoC,EAApCA,MAAOkB,EAA6B,EAA7BA,WAAYqC,EAAiB,EAAjBA,WAAiB,EAC/B3J,mBAAS,CAC/B4J,KAAM,KACNC,WAAY,CAAC,aAAc,eAH0B,mBAChDC,EADgD,KAC1CC,EAD0C,KAwBjDC,EAAiB,WACrBD,EAAQ,eAAKD,EAAN,CAAYF,KAAM,SAQrBK,EAAe,SAAAC,GAAQ,OAC3BJ,EAAKD,WAAWM,SAASC,KAAKC,OAAOH,KAEvC,OACE,kBAAC3B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMrC,EAAOsC,QAASpB,GACjC,kBAACiB,EAAA,EAAMjG,OAAP,6BACA,kBAACiG,EAAA,EAAMI,QAAP,KACE,kBAAC9F,EAAA,EAAD,CACEK,SAnCQ,SAAArC,GACd,IAAM+I,EAAO/I,EAAEC,OAAOwJ,MAAM,GACxBV,GACFG,EAAQ,eAAKD,EAAN,CAAYF,KAAMA,MAiCrB9G,OAAK,EACLgG,MAAM,wBACN/H,KAAK,OACL3B,KAAK,UAGT,kBAACmJ,EAAA,EAAMQ,QAAP,KACE,kBAAC5F,EAAA,EAAD,CAAQrB,MAAM,QAAQuB,QApCX,WACf,GAAkB,OAAdyG,EAAKF,MACHK,EAAaH,EAAKF,KAAK7I,MAAO,CAChC,IAAMwJ,EAAW,CAAEC,YAAaJ,KAAKC,OAAOP,EAAKF,KAAK7I,OACtD4I,EAAWG,EAAKF,KAAMW,GACtBP,IACA1C,MA8ByC5C,UAAQ,GAC/C,kBAAClC,EAAA,EAAD,CAAMzB,KAAK,cADb,SAGA,kBAACoC,EAAA,EAAD,CAAQrB,MAAM,MAAM4C,UAAQ,EAACrB,QAxBZ,WACrBiE,IACA0C,MAuBM,kBAACxH,EAAA,EAAD,CAAMzB,KAAK,WADb,c,UCzCO0J,GAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,SAAhB,MACF,cAAhBD,GACE,kBAACE,GAAA,EAAD,CACE5I,UAAU,eACV6I,QAASF,EACTG,UAAQ,EACRC,YAAU,EACVrI,KAAK,SACLgC,UAAQ,KCsKCsG,G,YAzKb,aAAe,IAAD,8BACZ,+CAcFpK,aAAe,SAAAC,GACb,EAAKoG,SAAL,eACGpG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAjBhB,EAqBdiK,cAAgB,WAAqB,IAApBC,EAAmB,uDAAT,KACnBlH,EAAU,CACdmH,UAAW9L,EAASmB,SAAS4K,YAAYC,UACzCxM,KAAM,CACJwI,GAAI,EAAKF,MAAMtI,KAAK0C,IACpBR,KAAM,EAAKoG,MAAMtI,KAAK4C,YACtBC,OAAQ,EAAKyF,MAAMtI,KAAK8C,WAQ5B,OALgB,OAAZuJ,EACFlH,EAAO,MAAYkH,EAEnBlH,EAAO,QAAc,EAAK9E,MAAM8E,QAE3BA,GAnCK,EAsCd2F,WAAa,SAACC,EAAMW,GAClB,IAAMe,EAAQ,sBAAkBC,eAAlB,QACRC,EAAe,EAAKrE,MAAMpI,QAAQsI,GAClC5G,EAAM,EAAK0G,MAAMsE,WAEvB,EAAKxE,SACH,CACEyD,YAAa,YACbgB,WAAY,EAAKxM,MAAMyM,WAAWrK,MAAMgK,GAAUM,IAAIhC,EAAMW,KAE9D,WACE,EAAKrL,MAAMwM,WAAW7E,GACpB,iBACA,SAAAC,GACE,IAAM+E,EAAkBC,KAAKC,MAC1BjF,EAAKkF,iBAAmBlF,EAAKmF,WAAc,KAG9C,EAAKhF,SAAS,CAAE4E,uBAElB,SAAAhI,GACEC,QAAQC,IAAIF,GACZ,EAAKoD,SAAS,CAAEyD,YAAa,QAASgB,WAAY,UAEpD,WACE,EAAKxM,MAAMwM,WAAWQ,SAASzL,IAC5B0L,iBACA1I,MAAK,SAAA2I,GACJ,EAAKC,gBAAgBD,EAAa3L,EAAK+K,MAExC5H,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ,EAAKoD,SAAS,CAAEyD,YAAa,QAASgB,WAAY,iBAtElD,EA8EdW,gBAAkB,SAACnB,EAASzK,EAAK+K,GAC/B/K,EACGa,MAAMkK,GACNzE,OACAvF,IAAI,EAAKyJ,cAAcC,IACvBzH,MAAK,WACJ,EAAKwD,SAAS,CAAEyD,YAAa,YAE9B9G,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ,EAAKoD,SAAS,CAAEqF,MAAOzI,EAAIG,cAxFnB,EA4FduI,YAAc,WAAO,IAAD,EACc,EAAKpF,MAA7BsE,EADU,EACVA,WAAY1M,EADF,EACEA,QAChB,EAAKG,MAAM8E,QAAQ9C,OAAS,GAC9B,EAAK+F,SAAS,CAAE3G,SAAS,EAAMgM,MAAO,KACtCb,EACGnK,MAAMvC,EAAQsI,IACdN,OACAvF,IAAI,EAAKyJ,iBACTxH,MAAK,WACJ,EAAKwD,SAAS,CAAE3G,SAAS,EAAO0D,QAAS,QAE1CJ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ,EAAKoD,SAAS,CACZ3G,SAAS,EACT0D,QAAS,GACTsI,MAAOzI,EAAIG,cAGZ,EAAKiD,SAAS,CAAEqF,MAAO,oBA/GlB,EAkHd/E,UAAY,kBAAM,EAAKN,SAAS,CAAEb,OAAO,KAlH3B,EAoHdkB,WAAa,kBAAM,EAAKL,SAAS,CAAEb,OAAO,KAjHxC,EAAKlH,MAAQ,CACX8E,QAAS,GACT1D,SAAS,EACTgM,MAAO,GACPlG,OAAO,EACPsF,WAAY,KACZhB,YAAa,GACbmB,gBAAiB,EACjBF,WAAYtM,EAASmN,UAAU/L,OAXrB,E,sEAqHJ,IAAD,SAQH0H,KAAKjJ,MANP8E,EAFK,EAELA,QACAsI,EAHK,EAGLA,MACAhM,EAJK,EAILA,QACA8F,EALK,EAKLA,MACAsE,EANK,EAMLA,YACAmB,EAPK,EAOLA,gBAEF,OACE,kBAAClJ,EAAA,EAAD,CAASX,UAAU,eACjB,kBAACa,EAAA,EAAD,CACE7B,MAAOgD,EACPlB,OAAK,EACL/B,KAAK,UACL+H,MAAO,kBAAC3F,EAAA,EAAD,CAAQJ,KAAK,QACpB0J,cAAc,OACdzK,UAAWsK,EAAMpL,OAAS,EAAI,QAAU,KACxC+B,YAAY,qBACZC,SAAUiF,KAAKvH,aACf8L,UAAW,SAAA7L,GAAC,OAAmB,KAAdA,EAAE8L,QAAiB,EAAKJ,cAAgB,QAE3D,kBAACpJ,EAAA,EAAOyJ,MAAR,CAAc7J,MAAI,EAAC8J,OAAO,IAAIzK,MAAO,CAAE0K,UAAW,SAChD,kBAAC3J,EAAA,EAAD,CACErB,MAAM,QACNiL,QAAQ,YACRN,cAAc,OACd1J,KAAK,OACLM,QAAS8E,KAAKoE,YACdnJ,SAAU9C,EACV0B,UAAW1B,EAAU,UAAY,OAEnC,kBAAC6C,EAAA,EAAD,CACErB,MAAM,MACNiL,QAAQ,eACR3J,SAA0B,cAAhBsH,EACV+B,cAAc,QACd1J,KAAK,eACLM,QAAS8E,KAAKZ,aAGlB,kBAAC,GAAD,CACEnB,MAAOA,EACPkB,WAAYa,KAAKb,WACjBqC,WAAYxB,KAAKwB,aAEnB,kBAAC,GAAD,CAAae,YAAaA,EAAaC,SAAUkB,S,GApK/B7C,IAAMC,W,qBCH1B+D,GAAc,SAAChJ,EAASnF,GAC5B,OAAOmF,EAAQnF,KAAKwI,KAAOxI,EAAK0C,IAAM,eAAiB,MA6B1C0L,GAlBO,SAAC,GAAuB,IAJ1B9B,EAIKnH,EAAoB,EAApBA,QAASnF,EAAW,EAAXA,KAChC,OACE,kBAACqO,GAAA,EAAD,KACE,kBAACA,GAAA,EAAQC,OAAT,CAAgBnH,IAAKhC,EAAQnF,KAAK6C,SAClC,kBAACwL,GAAA,EAAQvE,QAAT,CAAiB3G,UAAWgL,GAAYhJ,EAASnF,IAC/C,kBAACqO,GAAA,EAAQE,OAAT,CAAgB7K,GAAG,KAAKyB,EAAQnF,KAAKkC,MACrC,kBAACmM,GAAA,EAAQG,SAAT,MAVYlC,EAUmBnH,EAAQmH,UATtCmC,KAAOnC,GAAWoC,YALX,SAAAvJ,GACd,OAAOA,EAAQwJ,eAAe,WAAaxJ,EAAQwJ,eAAe,WAe3DC,CAAQzJ,GACP,kBAAC+B,EAAA,EAAD,CAAOC,IAAKhC,EAAQ0J,MAAO1L,UAAU,kBAErC,kBAACkL,GAAA,EAAQS,KAAT,KAAe3J,EAAQ+I,YCkHlBa,GAtIE,SAAC,GAAuB,IAArB7O,EAAoB,EAApBA,QAASF,EAAW,EAAXA,KAAW,EACdmB,mBAAS,CAC/B6N,SAAU,GACVC,eAAgB,KAChBrC,WAAYpM,EAASmB,WAAWC,IAAI,YACpCsN,UAAW,GACXC,WAAY,KANwB,mBAC/BlE,EAD+B,KACzBC,EADyB,KAShCkE,EAAiBC,iBAAO,MAM9BC,qBAAU,WAOR,OANIpP,GAAWF,IACbuP,EAAgBtE,EAAKiE,WACrBhE,GAAQ,SAAAD,GAAI,sBAAUA,EAAV,CAAgBgE,gBAAgB,OAC5CnH,EAAa5H,EAAQsI,KAGhB,WACLyC,EAAK2B,WAAWrD,SAEjB,CAACrJ,EAASF,IAEbsP,qBAAU,WAfRF,EAAeI,QAAQC,eAAe,CAAEC,SAAU,cAmBpD,IAAMH,EAAkB,SAAAL,GACtBA,EAAUS,SAAQ,SAAAC,GAChBA,EAAShO,IAAIa,MAAMmN,EAASpH,IAAIe,IAAIqG,EAASC,WAoB3C/H,EAAe,SAAAgI,GACnBC,EAAmBD,IAGfC,EAAqB,SAAAD,GACzB5E,GAAQ,SAAA3F,GAAI,sBACPA,EADO,CAEVyJ,SAAU,QAEZ,IAAIgB,EAAiB,GACrB/E,EAAK2B,WAAWnK,MAAMqN,GAAW9H,GAAG,eAAe,SAAAC,GACjD+H,EAAe9H,KAAKD,EAAKE,OACzB+C,GAAQ,SAAA3F,GAAI,sBACPA,EADO,CAEVyJ,SAAUgB,EACVf,gBAAgB,UA/BC,SAACzG,EAAI5G,EAAKiO,GAO/B,IAAe,IAND5E,EAAKiE,UAAUe,WAAU,SAAAL,GACrC,OACEA,EAASpH,KAAOA,GAAMoH,EAAShO,MAAQA,GAAOgO,EAASC,QAAUA,KAInD,CAChB,IAAMK,EAAc,CAAE1H,KAAI5G,MAAKiO,SAC/B3E,GAAQ,SAAA3F,GAAI,sBACPA,EADO,CAEV2J,UAAWjE,EAAKiE,UAAUiB,OAAOD,SAuBrCE,CAAeN,EAAW7E,EAAK2B,WAAY,gBA6C7C,OACE,kBAAC,IAAMpD,SAAP,KACE,kBAAC,GAAD,CACEzH,aArBe,SAAAC,GACnBkJ,EAAQ,eAAKD,EAAN,eAAajJ,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAqBzCqF,YAlBqB,SAAAtH,GAAO,OAAKA,EAAUA,EAAQgC,KAAO,GAkB7CmO,CAAmBnQ,GAChCwK,WAjBc,SAAAsE,GAClB,IAAMsB,EAAQtB,EAASuB,QAAO,SAACC,EAAKrL,GAIlC,OAHKqL,EAAIlF,SAASnG,EAAQnF,KAAKkC,OAC7BsO,EAAItI,KAAK/C,EAAQnF,KAAKkC,MAEjBsO,IACN,IACH,OAAwB,IAAjBF,EAAMjO,OAAN,UACAiO,EAAMjO,OADN,mBAEAiO,EAAMjO,OAFN,UAUSoO,CAAYxF,EAAK+D,YAE/B,kBAAClL,EAAA,EAAD,CAASX,UAAU,WAAW1B,QAASwJ,EAAKgE,gBAC1C,kBAACZ,GAAA,EAAQN,MAAT,KAlDkB,SAAAiB,GACtB,GAAIA,EAAS3M,OAAS,EACpB,OAAO2M,EACJ0B,QAAO,SAAAA,GACN,OAA+B,IAA3BzF,EAAKkE,WAAW9M,aAGCsO,IAAnBD,EAAOxC,SACPwC,EAAOxC,QAAQ5C,SAASL,EAAKkE,YAHtBuB,EAOF,QAERvH,KAAI,SAAAhE,GAAO,OACV,kBAAC,GAAD,CACEoB,IAAKpB,EAAQmH,UACbnH,QAASA,EACTnF,KAAMA,OAiCP4Q,CAAgB3F,EAAK+D,UACtB,yBAAKpN,IAAKwN,MAGd,kBAAC,GAAD,CAAaxC,WAAY3B,EAAK2B,WAAY1M,QAASA,EAASF,KAAMA,MClIzD6Q,GAJG,WAChB,OAAO,2CC+BMC,GAxBE,WACf,IAAM7F,EAAO8F,aAAY,SAAA1Q,GAAK,OACR,OAApBA,EAAML,KAAKA,KACP,CAAEA,KAAMK,EAAML,KAAKA,KAAME,QAASG,EAAMH,QAAQA,SAChD,CAAEF,KAAM,OAEd,OACE,kBAACkD,EAAA,EAAD,CAAM8N,QAAQ,SAEZ,kBAAC,EAAD,MAGA,kBAAC,EAAD,CAAW7K,SAAU8E,EAAKjL,OAE1B,kBAAC0G,EAAA,EAAD,CAAYnD,MAAO,CAAE0N,WAAY,UAC/B,kBAAC,GAAD,CAAU/Q,QAAS+K,EAAK/K,QAASF,KAAMiL,EAAKjL,QAE9C,kBAAC0G,EAAA,EAAD,CAAYV,MAAO,GACjB,kBAAC,GAAD,S,oBCjBOkL,GARC,WACd,OACE,kBAACC,GAAA,EAAD,CAAQ9H,QAAM,GACZ,kBAAC+H,GAAA,EAAD,CAAQvN,KAAK,OAAOqK,QAAQ,cCI5BmD,G,4LACiB,IAAD,OAElB7Q,EAASkE,OAAO4M,oBAAmB,SAAAtR,GACpB,OAATA,GACF,EAAKsI,MAAMiJ,QAAQvR,GACnB,EAAKsI,MAAMkJ,QAAQtJ,KAAK,eAExB,EAAKI,MAAMiJ,QAAQ,MACnB,EAAKjJ,MAAMkJ,QAAQtJ,KAAK,gB,+BAK5B,OAAOoB,KAAKhB,MAAMrI,UAChB,kBAAC,GAAD,MAEA,yBAAKkD,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsO,OAAK,EAACC,KAAK,YAAYC,UAAWb,KACzC,kBAAC,IAAD,CAAOY,KAAK,SAASC,UAAWtM,IAChC,kBAAC,IAAD,CAAOqM,KAAK,YAAYC,UAAWzQ,U,GArB3BiJ,IAAMC,WAgCTwH,eAAWvH,aAJF,SAAAhK,GAAK,MAAK,CAChCJ,UAAWI,EAAML,KAAKC,aAG2B,CAAEsR,QC1C9B,SAAAvR,GAAI,MAAK,CAC9BO,KAAM,WACNP,UDwCwBqK,CAAsCgH,KE9B1DQ,I,cAAQC,arBHY,SAACzR,EAAOC,GAIhC,MAHoB,cAAhBA,EAAOC,OACTF,OAAQsQ,GAEHxQ,EAAWE,EAAOC,KqBDWyR,YAAgBC,IAAOC,OAE7DC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.8ccf0920.chunk.js","sourcesContent":["const initialState = {\n  user: null,\n  isLoading: true\n};\n\nexport const user = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  channel: null\n};\n\nexport const channel = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_CHANNEL\":\n      return {\n        ...state,\n        channel: action.channel\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { user } from \"./user\";\nimport { channel } from \"./channel\";\n\nconst appReducer = combineReducers({\n  user,\n  channel\n});\n\nexport const allReducer = (state, action) => {\n  if (action.type === \"RESET_APP\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBa643TjTtPD0rnjdOfuFLpYyzDdsqr0Iw\",\n  authDomain: \"plack-23141.firebaseapp.com\",\n  databaseURL: \"https://plack-23141.firebaseio.com\",\n  projectId: \"plack-23141\",\n  storageBucket: \"plack-23141.appspot.com\",\n  messagingSenderId: \"360318459062\",\n  appId: \"1:360318459062:web:a7d366336084667dacda17\",\n  measurementId: \"G-E16F9YZVBR\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Register = () => {\n  const [form, setForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    errors: \"\",\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const isFormValid = () => {\n    if (!formIsNotEmpty(form)) {\n      setForm({ ...form, errors: \"Fill all fields\" });\n      return false;\n    } else if (!passwordsMatch(form)) {\n      setForm({\n        ...form,\n        errors: \"Passwords do not match or password to short\"\n      });\n      return false;\n    } else return true;\n  };\n\n  const formIsNotEmpty = ({ username, password, email }) => {\n    return username.length && password.length && email.length > 0;\n  };\n\n  const passwordsMatch = ({ password, passwordConfirm }) => {\n    return password === passwordConfirm && password.length >= 6;\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid()) {\n      e.preventDefault();\n      setForm({ ...form, loading: true, errors: \"\" });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(form.email, form.password)\n        .then(createdUser => {\n          createdUser.user\n            .updateProfile({\n              displayName: form.username,\n              photoURL: `https://www.gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              saveUser(createdUser);\n            })\n            .catch(err => {\n              console.log(err);\n              setForm({ ...form, loading: false, errors: err.message });\n            });\n        })\n        .catch(err => {\n          setForm({ ...form, loading: false, errors: err.message });\n          console.log(err);\n        });\n    }\n  };\n\n  const saveUser = createdUser => {\n    return form.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Register for Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"username\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              onChange={handleChange}\n              type=\"text\"\n            />\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Form.Input\n              fluid\n              name=\"passwordConfirm\"\n              icon=\"repeat\"\n              iconPosition=\"left\"\n              placeholder=\"Repeat password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Submit\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Already a user? <Link to=\"/login\">Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport \"../../App.css\";\n\nconst Login = () => {\n  const [form, setForm] = useState({\n    email: null,\n    password: null,\n    errors: \"\",\n    loading: false\n  });\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    if (isFormValid(form)) {\n      e.preventDefault();\n      setForm(prev => ({ ...prev, loading: true, errors: \"\" }));\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(form.email, form.password)\n        .then(signedUser => {\n          setForm(prev => ({ ...prev, loading: false }));\n        })\n        .catch(err => {\n          console.log(err);\n          setForm(prev => ({ ...prev, loading: false, errors: err.message }));\n        });\n    }\n  };\n\n  const isFormValid = ({ email, password }) =>\n    email && password\n      ? true\n      : setForm(prev => ({ ...prev, errors: \"Fill all fields\" }));\n\n  const errorMessage = <Message color=\"red\">{form.errors}</Message>;\n\n  return (\n    <Grid className=\"u-heigth100vh\" textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"red\" textAlign=\"center\">\n          <Icon name=\"code\" color=\"black\" />\n          Login to Plack\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              name=\"email\"\n              icon=\"mail\"\n              iconPosition=\"left\"\n              placeholder=\"Email-adress\"\n              onChange={handleChange}\n              type=\"email\"\n            />\n            <Form.Input\n              fluid\n              name=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              type=\"password\"\n            />\n            <Button\n              disabled={form.loading}\n              className={form.loading ? \"loading\" : null}\n              onClick={handleSubmit}\n              color=\"red\"\n              fluid\n              size=\"large\"\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        {form.errors.length > 0 ? errorMessage : null}\n        <Message>\n          Not a user? <Link to=\"/register\">Register</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Sidebar, Menu, Divider, Button } from \"semantic-ui-react\";\n\nconst ColorPanel = () => {\n  return (\n    <Sidebar\n      as={Menu}\n      icon=\"labeled\"\n      inverted\n      //   animation=\"overlay\"\n      vertical\n      visible\n      width=\"very thin\"\n    >\n      <Divider />\n      <Button icon=\"add\" size=\"small\" color=\"blue\" />\n    </Sidebar>\n  );\n};\n\nexport default ColorPanel;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetApp } from \"../../Store/Actions/resetApp\";\nimport {\n  Grid,\n  GridColumn,\n  GridRow,\n  Header,\n  HeaderContent,\n  Icon,\n  Dropdown,\n  Image\n} from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nconst UserPanel = ({ userData }) => {\n  const dispatch = useDispatch();\n  const handleSignout = () => {\n    firebase.auth().signOut();\n    dispatch(resetApp());\n  };\n  const dropdownOptions = [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{userData.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={handleSignout}>Sign Out</span>\n    }\n  ];\n\n  return (\n    <Grid>\n      <GridColumn>\n        <GridRow style={{ padding: \"1.2em\", margin: 0 }}>\n          <Header inverted floated=\"left\" as=\"h2\">\n            <Icon name=\"code\" />\n            <HeaderContent>Plack</HeaderContent>\n          </Header>\n          <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n            <Dropdown\n              trigger={\n                <span>\n                  <Image src={userData.photoURL} spaced=\"right\" avatar />\n                  {userData.displayName}\n                </span>\n              }\n              options={dropdownOptions}\n            />\n          </Header>\n        </GridRow>\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default UserPanel;\n","export const resetApp = () => ({\n  type: \"RESET_APP\"\n});\n","import React from \"react\";\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setChannel } from \"../../Store/Actions/setChannel\";\nimport firebase from \"../../firebase\";\n\nclass Channels extends React.Component {\n  state = {\n    modal: false,\n    channelName: \"\",\n    channelDetails: \"\",\n    channels: [],\n    channelsRef: firebase.database().ref(\"channels\"),\n    firstLoad: true,\n    activeChannel: null\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    console.log(\"Unmount\");\n    this.state.channelsRef.off();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n    });\n  };\n\n  setFirstChannel = () => {\n    if (this.state.firstLoad) {\n      this.props.setChannel(this.state.channels[0]);\n      this.setState({\n        firstLoad: false,\n        activeChannel: this.state.channels[0].id\n      });\n    }\n  };\n\n  closeModal = () => this.setState({ modal: false });\n\n  openModal = () => this.setState({ modal: true });\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  addChannel = () => {\n    const key = this.state.channelsRef.push().key;\n    const { userData } = this.props;\n    const { channelName, channelDetails } = this.state;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: userData.displayName,\n        avatar: userData.photoURL\n      }\n    };\n    this.state.channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  changeChannel = channel => {\n    this.props.setChannel(channel);\n    this.setState({ activeChannel: channel.id });\n  };\n\n  displayChannels = channels => {\n    return channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        active={this.state.activeChannel === channel.id}\n      >\n        #{channel.name}\n      </Menu.Item>\n    ));\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>\n            ({this.state.channels.length}){\" \"}\n            <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(this.state.channels)}\n        </Menu.Menu>\n\n        <Modal basic open={this.state.modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form.Field onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form.Field>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(null, { setChannel })(Channels);\n","export const setChannel = channel =>({\n    type: 'SET_CHANNEL',\n    channel\n})","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\n\nconst SidePanel = ({ userData }) => {\n  return (\n    <Menu\n      style={{ backgroundColor: \"#40123e\" }}\n      fixed=\"left\"\n      vertical\n      inverted\n      size=\"large\"\n    >\n      <UserPanel userData={userData} />\n      <Channels userData={userData} />\n    </Menu>\n  );\n};\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nconst MessagesHeader = ({ channelName, userAmount, handleChange }) => {\n  return (\n    <Segment clearing>\n      <Header fluid=\"true\" as=\"h2\" floated=\"left\">\n        <span>\n          {channelName}\n          <Icon name=\"star outline\" color=\"black\" />\n        </span>\n        <Header.Subheader>{userAmount}</Header.Subheader>\n      </Header>\n      <Header floated=\"right\">\n        <Input\n          size=\"mini\"\n          type=\"text\"\n          icon=\"search\"\n          name=\"searchTerm\"\n          placeholder=\"Search Messages\"\n          onChange={handleChange}\n        />\n      </Header>\n    </Segment>\n  );\n};\n\nexport default MessagesHeader;\n","import React, { useState } from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\n\nconst FileModal = ({ modal, closeModal, uploadFile }) => {\n  const [data, setData] = useState({\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  });\n\n  const addFile = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setData({ ...data, file: file });\n    }\n  };\n\n  const sendFile = () => {\n    if (data.file !== null) {\n      if (isAuthorized(data.file.name)) {\n        const metadata = { contentType: mime.lookup(data.file.name) };\n        uploadFile(data.file, metadata);\n        resetFileState();\n        closeModal();\n      }\n    }\n  };\n\n  const resetFileState = () => {\n    setData({ ...data, file: null });\n  };\n\n  const closeModalHere = () => {\n    closeModal();\n    resetFileState();\n  };\n\n  const isAuthorized = fileName =>\n    data.authorized.includes(mime.lookup(fileName));\n\n  return (\n    <Modal basic open={modal} onClose={closeModal}>\n      <Modal.Header>Select an image file</Modal.Header>\n      <Modal.Content>\n        <Input\n          onChange={addFile}\n          fluid\n          label=\"File types: JPEG, PNG\"\n          name=\"file\"\n          type=\"file\"\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"green\" onClick={sendFile} inverted>\n          <Icon name=\"checkmark\" /> Send\n        </Button>\n        <Button color=\"red\" inverted onClick={closeModalHere}>\n          <Icon name=\"remove\" /> Cancel\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percents }) =>\n  uploadState === 'uploading' && (\n    <Progress\n      className=\"progress_bar\"\n      percent={percents}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport FileModal from \"./FileModal\";\nimport firebase from \"../../firebase\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      message: \"\",\n      loading: false,\n      error: \"\",\n      modal: false,\n      uploadTask: null,\n      uploadState: \"\",\n      percentUploaded: 0,\n      storageRef: firebase.storage().ref()\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.props.user.uid,\n        name: this.props.user.displayName,\n        avatar: this.props.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  uploadFile = (file, metadata) => {\n    const filePath = `chat/public/${uuidv4()}.jpg`;\n    const pathToUpload = this.props.channel.id;\n    const ref = this.props.messageRef;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.log(err);\n            this.setState({ uploadState: \"error\", uploadTask: null });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({ uploadState: \"error\", uploadTask: null });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ error: err.message });\n      });\n  };\n\n  sendMessage = () => {\n    const { messageRef, channel } = this.props;\n    if (this.state.message.length > 0) {\n      this.setState({ loading: true, error: \"\" });\n      messageRef\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\" });\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            message: \"\",\n            error: err.message\n          });\n        });\n    } else this.setState({ error: \"No data filled\" });\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n  render() {\n    const {\n      message,\n      error,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded\n    } = this.state;\n    return (\n      <Segment className=\"messageForm\">\n        <Input\n          value={message}\n          fluid\n          name=\"message\"\n          label={<Button icon=\"add\" />}\n          labelPosition=\"left\"\n          className={error.length > 0 ? \"error\" : null}\n          placeholder=\"Write your message\"\n          onChange={this.handleChange}\n          onKeyDown={e => (e.keyCode === 13 ? this.sendMessage() : null)}\n        />\n        <Button.Group icon widths=\"2\" style={{ marginTop: \"10px\" }}>\n          <Button\n            color=\"green\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            onClick={this.sendMessage}\n            disabled={loading}\n            className={loading ? \"loading\" : null}\n          />\n          <Button\n            color=\"red\"\n            content=\"Upload Media\"\n            disabled={uploadState === \"uploading\" ? true : false}\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n            onClick={this.openModal}\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar uploadState={uploadState} percents={percentUploaded} />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message_self\" : null;\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => {\n  return moment(timestamp).fromNow();\n};\n\nconst SingleMessage = ({ message, user }) => {\n  return (\n    <Comment>\n      <Comment.Avatar src={message.user.avatar} />\n      <Comment.Content className={isOnMessage(message, user)}>\n        <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n\n        {isImage(message) ? (\n          <Image src={message.image} className=\"message_image\" />\n        ) : (\n          <Comment.Text>{message.content}</Comment.Text>\n        )}\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default SingleMessage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport SingleMessage from \"./SingleMessage\";\n\nconst Messages = ({ channel, user }) => {\n  const [data, setData] = useState({\n    messages: [],\n    messageLoading: null,\n    messageRef: firebase.database().ref(\"messages\"),\n    listeners: [],\n    searchTerm: \"\"\n  });\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    if (channel && user) {\n      removeListeners(data.listeners);\n      setData(data => ({ ...data, messageLoading: true }));\n      addListeners(channel.id);\n    }\n\n    return () => {\n      data.messageRef.off();\n    };\n  }, [channel, user]);\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  const removeListeners = listeners => {\n    listeners.forEach(listener => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  };\n\n  const addToListeners = (id, ref, event) => {\n    const index = data.listeners.findIndex(listener => {\n      return (\n        listener.id === id && listener.ref === ref && listener.event === event\n      );\n    });\n\n    if (index === -1) {\n      const newListener = { id, ref, event };\n      setData(prev => ({\n        ...prev,\n        listeners: data.listeners.concat(newListener)\n      }));\n    }\n  };\n\n  const addListeners = channelId => {\n    addMessageListener(channelId);\n  };\n\n  const addMessageListener = channelId => {\n    setData(prev => ({\n      ...prev,\n      messages: []\n    }));\n    let loadedMessages = [];\n    data.messageRef.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      setData(prev => ({\n        ...prev,\n        messages: loadedMessages,\n        messageLoading: false\n      }));\n    });\n    addToListeners(channelId, data.messageRef, \"child_added\");\n  };\n\n  const displayMessages = messages => {\n    if (messages.length > 0) {\n      return messages\n        .filter(filter => {\n          if (data.searchTerm.length === 0) {\n            return filter;\n          } else if (\n            filter.content !== undefined &&\n            filter.content.includes(data.searchTerm)\n          ) {\n            return filter;\n          }\n          return null;\n        })\n        .map(message => (\n          <SingleMessage\n            key={message.timestamp}\n            message={message}\n            user={user}\n          />\n        ));\n    }\n  };\n\n  const handleChange = e => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const displayChannelName = channel => (channel ? channel.name : \"\");\n\n  const usersAmount = messages => {\n    const users = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    return users.length === 1\n      ? `${users.length} user`\n      : `${users.length} users`;\n  };\n\n  return (\n    <React.Fragment>\n      <MessagesHeader\n        handleChange={handleChange}\n        channelName={displayChannelName(channel)}\n        userAmount={usersAmount(data.messages)}\n      />\n      <Segment className=\"messages\" loading={data.messageLoading}>\n        <Comment.Group>\n          {displayMessages(data.messages)}\n          <div ref={messagesEndRef} />\n        </Comment.Group>\n      </Segment>\n      <MessageForm messageRef={data.messageRef} channel={channel} user={user} />\n    </React.Fragment>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\n\nconst MetaPanel = () => {\n  return <div>MetaPanel</div>;\n};\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { Grid, GridColumn } from \"semantic-ui-react\";\nimport ColorPanel from \"../../Components/ColorPanel/ColorPanel\";\nimport SidePanel from \"../../Components/SidePanel/SidePanel\";\nimport Messages from \"../../Components/Messages/Messages\";\nimport MetaPanel from \"../../Components/MetaPanel/MetaPanel\";\nimport { useSelector } from \"react-redux\";\n\nimport \"../../App.css\";\n\nconst MainPage = () => {\n  const data = useSelector(state =>\n    state.user.user !== null\n      ? { user: state.user.user, channel: state.channel.channel }\n      : { user: \"\" }\n  );\n  return (\n    <Grid columns=\"equal\">\n      {/* <GridColumn> */}\n      <ColorPanel />\n      {/* </GridColumn> */}\n      {/* <GridColumn> */}\n      <SidePanel userData={data.user} />\n      {/* </GridColumn> */}\n      <GridColumn style={{ marginLeft: \"320px\" }}>\n        <Messages channel={data.channel} user={data.user} />\n      </GridColumn>\n      <GridColumn width={4}>\n        <MetaPanel />\n      </GridColumn>\n    </Grid>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content=\"Loading\" />\n    </Dimmer>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport firebase from \"./firebase\";\nimport Register from \"./Pages/Register/Register\";\nimport Login from \"./Pages/Login/Login\";\nimport MainPage from \"./Pages/MainPage/MainPage\";\nimport Spinner from \"./Components/Spinner/Spiner\";\nimport { setUser } from \"./Store/Actions/setUser\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    //firebase is mounted, and this function is always active\n    firebase.auth().onAuthStateChanged(user => {\n      if (user !== null) {\n        this.props.setUser(user);\n        this.props.history.push(\"/plackApp\");\n      } else {\n        this.props.setUser(null);\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/plackApp\" component={MainPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nexport default withRouter(connect(mapStateToProps, { setUser })(App));\n","export const setUser = user => ({\n  type: \"SET_USER\",\n  user\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { allReducer } from \"./Store/Reducers/index\";\nimport Thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport './index.css'\n\nconst store = createStore(allReducer, applyMiddleware(Thunk, logger));\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}